module ARRAY$SYNTAX [org.kframework.attributes.Location(Location(87,1,91,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports ARRAY-SYMBOLIC$SYNTAX
endmodule


module ARRAY-IN-K$SYNTAX [org.kframework.attributes.Location(Location(59,1,85,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports LIST$SYNTAX
  imports K-EQUAL$SYNTAX
  imports INT$SYNTAX
  imports ARRAY-SYNTAX$SYNTAX
  syntax List ::= "ensureOffsetList" "(" List "," Int "," KItem ")" [function, klabel(ensureOffsetList)]
  syntax Array ::= "makeArray" "(" Int "," KItem ")" [function, hook(ARRAY.make), klabel(makeArray)]
  syntax Array ::= "arr" "(" List "," Int "," KItem ")" [klabel(arr)]
endmodule


module ARRAY-SYMBOLIC$SYNTAX [org.kframework.attributes.Location(Location(51,1,53,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), symbolic]
  imports ARRAY-IN-K$SYNTAX
endmodule


module ARRAY-SYNTAX [org.kframework.attributes.Location(Location(25,1,39,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports LIST
  imports ARRAY-SYNTAX$SYNTAX
endmodule


module ARRAY-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(25,1,39,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports LIST$SYNTAX
  syntax KItem ::= Array "[" Int "]" [function, hook(ARRAY.lookup)]
  syntax Bool ::= Int "in_keys" "(" Array ")" [function, functional, hook(ARRAY.in_keys)]
  syntax Array [element(_[_<-_]), hook(ARRAY.Array), org.kframework.attributes.Location(Location(28,3,28,69)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), unit(arrayCtor)]
  syntax Array ::= Array "[" Int "<-" KItem "]" [function, hook(ARRAY.update), klabel(_[_<-_]), symbol]
  syntax Array ::= Array "[" Int "<-" "undef" "]" [function, hook(ARRAY.remove)]
  syntax Array ::= "updateArray" "(" Array "," Int "," List ")" [function, hook(ARRAY.updateAll), klabel(updateArray)]
  syntax Array ::= "fillArray" "(" Array "," Int "," Int "," KItem ")" [function, hook(ARRAY.fill), klabel(fillArray)]
endmodule


module AUTO-CASTS [org.kframework.attributes.Location(Location(183,1,191,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports AUTO-CASTS$SYNTAX
endmodule


module AUTO-CASTS$SYNTAX [org.kframework.attributes.Location(Location(183,1,191,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
endmodule


module AUTO-FOLLOW [org.kframework.attributes.Location(Location(193,1,204,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports AUTO-FOLLOW$SYNTAX
endmodule


module AUTO-FOLLOW$SYNTAX [org.kframework.attributes.Location(Location(193,1,204,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
endmodule


module BASIC-K [org.kframework.attributes.Location(Location(8,1,13,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports ML-SYNTAX
  imports BASIC-K$SYNTAX
endmodule


module BASIC-K$SYNTAX [org.kframework.attributes.Location(Location(8,1,13,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports ML-SYNTAX$SYNTAX
  syntax KItem [hook(K.KItem), org.kframework.attributes.Location(Location(10,3,10,30)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  syntax KConfigVar [org.kframework.attributes.Location(Location(12,3,12,27)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k)), token]
  syntax K ::= KItem
endmodule


module BOOL [org.kframework.attributes.Location(Location(308,1,356,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports BOOL-SYNTAX
  imports BOOL$SYNTAX
  imports BASIC-K
  rule `notBool_`(#token("true","Bool"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(322), org.kframework.attributes.Location(Location(322,8,322,29)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `notBool_`(#token("false","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(323), org.kframework.attributes.Location(Location(323,8,323,29)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_xorBool_`(#token("false","Bool"),#SemanticCastToBool(B))=>#SemanticCastToBool(B) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(335), org.kframework.attributes.Location(Location(335,8,335,38)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_xorBool_`(#SemanticCastToBool(B),#token("false","Bool"))=>#SemanticCastToBool(B) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(336), org.kframework.attributes.Location(Location(336,8,336,38)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_xorBool_`(#SemanticCastToBool(B),#SemanticCastToBool(B))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(337), org.kframework.attributes.Location(Location(337,8,337,38)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_orElseBool_`(#token("true","Bool"),#SemanticCastToBool(_))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(344), org.kframework.attributes.Location(Location(344,8,344,33)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_orElseBool_`(#token("false","Bool"),#SemanticCastToBool(K))=>#SemanticCastToBool(K) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(346), org.kframework.attributes.Location(Location(346,8,346,37)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_orElseBool_`(#SemanticCastToBool(_),#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(345), org.kframework.attributes.Location(Location(345,8,345,33)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_orElseBool_`(#SemanticCastToBool(K),#token("false","Bool"))=>#SemanticCastToBool(K) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(347), org.kframework.attributes.Location(Location(347,8,347,37)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_orBool_`(#token("true","Bool"),#SemanticCastToBool(_))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(339), org.kframework.attributes.Location(Location(339,8,339,34)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_orBool_`(#token("false","Bool"),#SemanticCastToBool(B))=>#SemanticCastToBool(B) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(341), org.kframework.attributes.Location(Location(341,8,341,32)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_orBool_`(#SemanticCastToBool(_),#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(340), org.kframework.attributes.Location(Location(340,8,340,34)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_orBool_`(#SemanticCastToBool(B),#token("false","Bool"))=>#SemanticCastToBool(B) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(342), org.kframework.attributes.Location(Location(342,8,342,32)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_impliesBool_`(#token("true","Bool"),#SemanticCastToBool(B))=>#SemanticCastToBool(B) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(349), org.kframework.attributes.Location(Location(349,8,349,36)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_impliesBool_`(#token("false","Bool"),#SemanticCastToBool(_))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(350), org.kframework.attributes.Location(Location(350,8,350,40)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_impliesBool_`(#SemanticCastToBool(_),#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(351), org.kframework.attributes.Location(Location(351,8,351,39)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_impliesBool_`(#SemanticCastToBool(B),#token("false","Bool"))=>`notBool_`(#SemanticCastToBool(B)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(352), org.kframework.attributes.Location(Location(352,8,352,45)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_andThenBool_`(#token("true","Bool"),#SemanticCastToBool(K))=>#SemanticCastToBool(K) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(330), org.kframework.attributes.Location(Location(330,8,330,37)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_andThenBool_`(#token("false","Bool"),#SemanticCastToBool(_))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(332), org.kframework.attributes.Location(Location(332,8,332,36)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_andThenBool_`(#SemanticCastToBool(_),#token("false","Bool"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(333), org.kframework.attributes.Location(Location(333,8,333,36)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_andThenBool_`(#SemanticCastToBool(K),#token("true","Bool"))=>#SemanticCastToBool(K) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(331), org.kframework.attributes.Location(Location(331,8,331,37)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_andBool_`(#token("true","Bool"),#SemanticCastToBool(B))=>#SemanticCastToBool(B) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(325), org.kframework.attributes.Location(Location(325,8,325,37)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_andBool_`(#token("false","Bool"),#SemanticCastToBool(_))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(327), org.kframework.attributes.Location(Location(327,8,327,37)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_andBool_`(#SemanticCastToBool(_),#token("false","Bool"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(328), org.kframework.attributes.Location(Location(328,8,328,37)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_andBool_`(#SemanticCastToBool(B),#token("true","Bool"))=>#SemanticCastToBool(B) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(326), org.kframework.attributes.Location(Location(326,8,326,37)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_=/=Bool_`(#SemanticCastToBool(B1),#SemanticCastToBool(B2))=>`notBool_`(`_==Bool_`(#SemanticCastToBool(B1),#SemanticCastToBool(B2))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(354), org.kframework.attributes.Location(Location(354,8,354,57)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module BOOL$SYNTAX [org.kframework.attributes.Location(Location(308,1,356,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports BOOL-SYNTAX$SYNTAX
  imports BASIC-K$SYNTAX
  syntax priority notBool_ > _orElseBool_ _orBool_ _andThenBool_ _impliesBool_ _andBool_ _xorBool_ > _==Bool_ _=/=Bool_
  syntax associativity left _xorBool_
  syntax associativity left _orElseBool_
  syntax associativity left _orBool_
  syntax associativity left _impliesBool_
  syntax associativity left _andThenBool_
  syntax associativity left _andBool_
  syntax associativity left _==Bool_ _=/=Bool_
  syntax associativity left _==Bool_
  syntax associativity left _=/=Bool_
  syntax Bool ::= Bool "xorBool" Bool [boolOperation, function, functional, hook(BOOL.xor), klabel(_xorBool_), left, smt-hook(xor), symbol]
  syntax Bool ::= Bool "orElseBool" Bool [boolOperation, function, functional, hook(BOOL.orElse), klabel(_orElseBool_), left, smt-hook(or), symbol]
  syntax Bool ::= Bool "orBool" Bool [boolOperation, function, functional, hook(BOOL.or), klabel(_orBool_), latex({#1}\vee_{\scriptstyle\it Bool}{#2}), left, smt-hook(or)]
  syntax Bool ::= Bool "impliesBool" Bool [boolOperation, function, functional, hook(BOOL.implies), klabel(_impliesBool_), left, smt-hook(=>), symbol]
  syntax Bool ::= Bool "andThenBool" Bool [boolOperation, function, functional, hook(BOOL.andThen), klabel(_andThenBool_), left, smt-hook(and), symbol]
  syntax Bool ::= Bool "andBool" Bool [boolOperation, function, functional, hook(BOOL.and), klabel(_andBool_), latex({#1}\wedge_{\scriptstyle\it Bool}{#2}), left, smt-hook(and), symbol]
  syntax Bool ::= Bool "==Bool" Bool [function, functional, hook(BOOL.eq), klabel(_==Bool_), left, smt-hook(=), symbol]
  syntax Bool ::= Bool "=/=Bool" Bool [function, functional, hook(BOOL.ne), klabel(_=/=Bool_), left, smt-hook(distinct), symbol]
  syntax Bool ::= "notBool" Bool [boolOperation, function, functional, hook(BOOL.not), klabel(notBool_), latex(\neg_{\scriptstyle\it Bool}{#1}), smt-hook(not), symbol]
endmodule


module BOOL-SYNTAX [org.kframework.attributes.Location(Location(302,1,306,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports BOOL-SYNTAX$SYNTAX
endmodule


module BOOL-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(302,1,306,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  syntax Bool [hook(BOOL.Bool), org.kframework.attributes.Location(Location(303,3,303,31)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  syntax Bool ::= "true" [token]
  syntax Bool ::= "false" [token]
endmodule


module BUILTIN-ID-TOKENS [org.kframework.attributes.Location(Location(20,1,23,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports BUILTIN-ID-TOKENS$SYNTAX
endmodule


module BUILTIN-ID-TOKENS$SYNTAX [org.kframework.attributes.Location(Location(20,1,23,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  syntax #UpperId ::= r"[A-Z][a-zA-Z0-9]*" [prec(2), token]
  syntax #LowerId ::= r"[a-z][a-zA-Z0-9]*" [prec(2), token]
endmodule


module BYTES$SYNTAX [org.kframework.attributes.Location(Location(839,1,853,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports INT$SYNTAX
  imports BYTES-SYMBOLIC$SYNTAX
endmodule


module BYTES-HOOKED$SYNTAX [org.kframework.attributes.Location(Location(715,1,744,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports STRING-SYNTAX$SYNTAX
  syntax associativity right _+Bytes__BYTES-HOOKED
  syntax String ::= "Bytes2String" "(" Bytes ")" [function, functional, hook(BYTES.bytes2string), klabel(Bytes2String)]
  syntax Signedness ::= "Unsigned" [klabel(unsignedBytes), symbol]
  syntax Signedness ::= "Signed" [klabel(signedBytes), symbol]
  syntax Int ::= Bytes "[" Int "]" [function, hook(BYTES.get)]
  syntax Int ::= "lengthBytes" "(" Bytes ")" [function, functional, hook(BYTES.length), klabel(lengthBytes), smtlib(lengthBytes)]
  syntax Int ::= "Bytes2Int" "(" Bytes "," Endianness "," Signedness ")" [function, functional, hook(BYTES.bytes2int), klabel(Bytes2Int)]
  syntax Endianness ::= "LE" [klabel(littleEndianBytes), symbol]
  syntax Endianness ::= "BE" [klabel(bigEndianBytes), symbol]
  syntax Bytes [hook(BYTES.Bytes), org.kframework.attributes.Location(Location(718,3,718,41)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), token]
  syntax Bytes ::= Bytes "[" Int "<-" Int "]" [function, hook(BYTES.update)]
  syntax Bytes ::= Bytes "+Bytes" Bytes [function, functional, hook(BYTES.concat), right]
  syntax Bytes ::= "substrBytes" "(" Bytes "," Int "," Int ")" [function, hook(BYTES.substr), klabel(substrBytes)]
  syntax Bytes ::= "reverseBytes" "(" Bytes ")" [function, functional, hook(BYTES.reverse), klabel(reverseBytes)]
  syntax Bytes ::= "replaceAtBytes" "(" Bytes "," Int "," Bytes ")" [function, hook(BYTES.replaceAt), klabel(replaceAtBytes)]
  syntax Bytes ::= "padRightBytes" "(" Bytes "," Int "," Int ")" [function, hook(BYTES.padRight), klabel(padRightBytes)]
  syntax Bytes ::= "padLeftBytes" "(" Bytes "," Int "," Int ")" [function, hook(BYTES.padLeft), klabel(padLeftBytes)]
  syntax Bytes ::= "String2Bytes" "(" String ")" [function, functional, hook(BYTES.string2bytes), klabel(String2Bytes)]
  syntax Bytes ::= "Int2Bytes" "(" Int "," Int "," Endianness ")" [function, functional, hook(BYTES.int2bytes), klabel(Int2Bytes)]
  syntax Bytes ::= "Int2Bytes" "(" Int "," Endianness "," Signedness ")" [function, functional, klabel(Int2BytesNoLen)]
  syntax Bytes ::= ".Bytes" [function, functional, hook(BYTES.empty)]
endmodule


module BYTES-IN-K$SYNTAX [org.kframework.attributes.Location(Location(746,1,825,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports STRING-BUFFER$SYNTAX
  imports STRING$SYNTAX
  imports K-EQUAL$SYNTAX
  imports INT$SYNTAX
  syntax associativity right _+Bytes__BYTES-IN-K
  syntax String ::= "Bytes2String" "(" Bytes "," StringBuffer ")" [function, klabel(Bytes2StringAux)]
  syntax String ::= "Bytes2String" "(" Bytes ")" [function, functional, klabel(Bytes2String)]
  syntax Signedness ::= "Unsigned" [klabel(unsignedBytes), symbol]
  syntax Signedness ::= "Signed" [klabel(signedBytes), symbol]
  syntax Int ::= Bytes "[" Int "]" [function]
  syntax Int ::= "lengthBytes" "(" Bytes "," Int ")" [function, klabel(lengthBytesAux), smtlib(lengthBytesAux)]
  syntax Int ::= "lengthBytes" "(" Bytes ")" [function, functional, klabel(lengthBytes), smtlib(lengthBytes)]
  syntax Int ::= "Bytes2Int" "(" Bytes "," Endianness "," Signedness ")" [function, functional, klabel(Bytes2Int)]
  syntax Endianness ::= "LE" [klabel(littleEndianBytes), symbol]
  syntax Endianness ::= "BE" [klabel(bigEndianBytes), symbol]
  syntax Bytes ::= Int ":" Bytes
  syntax Bytes ::= Bytes "[" Int "<-" Int "]" [function]
  syntax Bytes ::= Bytes "+Bytes" Bytes [function, functional, right]
  syntax Bytes ::= "substrBytes" "(" Bytes "," Int "," Int ")" [function, klabel(substrBytes)]
  syntax Bytes ::= "reverseBytes" "(" Bytes "," Bytes ")" [function, klabel(reverseBytesAux)]
  syntax Bytes ::= "reverseBytes" "(" Bytes ")" [function, functional, klabel(reverseBytes)]
  syntax Bytes ::= "replaceAtBytes" "(" Bytes "," Int "," Bytes ")" [function, klabel(replaceAtBytes)]
  syntax Bytes ::= "padRightBytes" "(" Bytes "," Int "," Int ")" [function, klabel(padRightBytes)]
  syntax Bytes ::= "padLeftBytes" "(" Bytes "," Int "," Int ")" [function, klabel(padLeftBytes)]
  syntax Bytes ::= "nilBytes"
  syntax Bytes ::= "String2Bytes" "(" String ")" [function, functional, klabel(String2Bytes)]
  syntax Bytes ::= "Int2Bytes" "(" Int "," Int "," Endianness ")" [function, functional, klabel(Int2Bytes)]
  syntax Bytes ::= "Int2Bytes" "(" Int "," Endianness "," Signedness ")" [function, functional, klabel(Int2BytesNoLen)]
  syntax Bytes ::= "Int2Bytes" "(" Int "," Bytes ")" [function, klabel(Int2BytesAux)]
  syntax Bytes ::= ".Bytes" [function, functional]
endmodule


module BYTES-SYMBOLIC$SYNTAX [kast, org.kframework.attributes.Location(Location(835,1,837,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), symbolic]
  imports BYTES-IN-K$SYNTAX
endmodule


module COLLECTIONS [org.kframework.attributes.Location(Location(292,1,300,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports SET
  imports MAP
  imports LIST
  imports COLLECTIONS$SYNTAX
endmodule


module COLLECTIONS$SYNTAX [org.kframework.attributes.Location(Location(292,1,300,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports SET$SYNTAX
  imports MAP$SYNTAX
  imports LIST$SYNTAX
  syntax Set ::= "List2Set" "(" List ")" [function, functional, hook(SET.list2set), klabel(List2Set)]
  syntax List ::= "Set2List" "(" Set ")" [function, functional, hook(SET.set2list), klabel(Set2List)]
endmodule


module CONFIG-CELLS [org.kframework.attributes.Location(Location(136,1,150,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports RULE-LISTS
  imports KCELLS
  imports CONFIG-CELLS$SYNTAX
endmodule


module CONFIG-CELLS$SYNTAX [org.kframework.attributes.Location(Location(136,1,150,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports RULE-LISTS$SYNTAX
  imports KCELLS$SYNTAX
  syntax Cell ::= "<" #CellName #CellProperties ">" K "</" #CellName ">" [klabel(#configCell), symbol]
  syntax Cell ::= "<" #CellName "/>" [klabel(#externalCell), symbol]
  syntax #CellProperty ::= #CellName "=" KString [klabel(#cellProperty), symbol]
  syntax #CellProperties ::= #CellProperty #CellProperties [klabel(#cellPropertyList), symbol]
  syntax #CellProperties ::= "" [klabel(#cellPropertyListTerminator), symbol]
  syntax #CellName ::= r"[a-zA-Z][a-zA-Z0-9\\-]*" [prec(1), token]
  syntax #CellName ::= #UpperId [token]
  syntax #CellName ::= #LowerId [token]
endmodule


module CONFIGURATION-PRIMITIVES [org.kframework.attributes.Location(Location(1407,1,1409,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports CONFIGURATION-PRIMITIVES$SYNTAX
endmodule


module CONFIGURATION-PRIMITIVES$SYNTAX [org.kframework.attributes.Location(Location(1407,1,1409,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  syntax K ::= "#RESTORE_CONFIGURATION" "(" K ")" [klabel(#RESTORE_CONFIGURATION)]
endmodule


module DEFAULT-LAYOUT [org.kframework.attributes.Location(Location(227,1,231,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports DEFAULT-LAYOUT$SYNTAX
endmodule


module DEFAULT-LAYOUT$SYNTAX [org.kframework.attributes.Location(Location(227,1,231,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  syntax #Layout ::= r"(\\/\\/[^\\n\\r]*)"
  syntax #Layout ::= r"(\\/\\*([^\\*]|(\\*+([^\\*\\/])))*\\*+\\/)"
  syntax #Layout ::= r"([\\ \\n\\r\\t])"
endmodule


module DOMAINS [org.kframework.attributes.Location(Location(12,1,23,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports STRING
  imports SET
  imports MAP
  imports LIST
  imports K-IO
  imports INT
  imports ID
  imports DOMAINS-SYNTAX
  imports DOMAINS$SYNTAX
  imports BOOL
  imports BASIC-K
endmodule


module DOMAINS$SYNTAX [org.kframework.attributes.Location(Location(12,1,23,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports STRING$SYNTAX
  imports SET$SYNTAX
  imports MAP$SYNTAX
  imports LIST$SYNTAX
  imports K-IO$SYNTAX
  imports INT$SYNTAX
  imports ID$SYNTAX
  imports DOMAINS-SYNTAX$SYNTAX
  imports BOOL$SYNTAX
  imports BASIC-K$SYNTAX
endmodule


module DOMAINS-SYNTAX [org.kframework.attributes.Location(Location(4,1,10,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports UNSIGNED-INT-SYNTAX
  imports STRING-SYNTAX
  imports SORT-K
  imports ID-SYNTAX
  imports DOMAINS-SYNTAX$SYNTAX
  imports BOOL-SYNTAX
endmodule


module DOMAINS-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(4,1,10,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports UNSIGNED-INT-SYNTAX$SYNTAX
  imports STRING-SYNTAX$SYNTAX
  imports SORT-K$SYNTAX
  imports ID-SYNTAX$SYNTAX
  imports BOOL-SYNTAX$SYNTAX
endmodule


module FLOAT$SYNTAX [org.kframework.attributes.Location(Location(508,1,572,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports INT-SYNTAX$SYNTAX
  imports FLOAT-SYNTAX$SYNTAX
  imports BOOL$SYNTAX
  syntax priority --Float__FLOAT > _^Float__FLOAT > _*Float__FLOAT _/Float__FLOAT _%Float__FLOAT > _+Float__FLOAT _-Float__FLOAT
  syntax associativity left _^Float__FLOAT
  syntax associativity left _>Float__FLOAT
  syntax associativity left _>=Float__FLOAT
  syntax associativity left _==Float_
  syntax associativity left _=/=Float__FLOAT
  syntax associativity left _<Float__FLOAT
  syntax associativity left _<=Float__FLOAT
  syntax associativity left _/Float__FLOAT
  syntax associativity left _-Float__FLOAT
  syntax associativity left _+Float__FLOAT _-Float__FLOAT
  syntax associativity left _+Float__FLOAT
  syntax associativity left _*Float__FLOAT _/Float__FLOAT _%Float__FLOAT
  syntax associativity left _*Float__FLOAT
  syntax associativity left _%Float__FLOAT
  syntax MInt ::= "significandFloat" "(" Float ")" [function, hook(FLOAT.significand), klabel(significandFloat)]
  syntax Int ::= "precisionFloat" "(" Float ")" [function, functional, hook(FLOAT.precision), klabel(precisionFloat)]
  syntax Int ::= "exponentFloat" "(" Float ")" [function, functional, hook(FLOAT.exponent), klabel(exponentFloat)]
  syntax Int ::= "exponentBitsFloat" "(" Float ")" [function, functional, hook(FLOAT.exponentBits), klabel(exponentBitsFloat)]
  syntax Int ::= "Float2Int" "(" Float ")" [function, functional, hook(FLOAT.float2int), klabel(Float2Int), latex({\\it{}Float2Int})]
  syntax Float ::= Float "^Float" Float [function, hook(FLOAT.pow), latex({#1}^{#2}), left]
  syntax Float ::= Float "/Float" Float [function, hook(FLOAT.div), latex({#1}\mathrel{\div_{\scriptstyle\it Float}}{#2}), left, smt-hook((fp.div roundNearestTiesToEven #1 #2))]
  syntax Float ::= Float "-Float" Float [function, hook(FLOAT.sub), latex({#1}\mathrel{-_{\scriptstyle\it Float}}{#2}), left, smt-hook((fp.sub roundNearestTiesToEven #1 #2))]
  syntax Float ::= Float "+Float" Float [function, hook(FLOAT.add), latex({#1}\mathrel{+_{\scriptstyle\it Float}}{#2}), left, smt-hook((fp.add roundNearestTiesToEven #1 #2))]
  syntax Float ::= Float "*Float" Float [function, hook(FLOAT.mul), latex({#1}\mathrel{\ast_{\scriptstyle\it Float}}{#2}), left, smt-hook((fp.mul roundNearestTiesToEven #1 #2))]
  syntax Float ::= Float "%Float" Float [function, hook(FLOAT.rem), latex({#1}\mathrel{\%_{\scriptstyle\it Float}}{#2}), left, smt-hook((fp.rem roundNearestTiesToEven #1 #2))]
  syntax Float ::= "tanFloat" "(" Float ")" [function, hook(FLOAT.tan), klabel(tanFloat)]
  syntax Float ::= "sqrtFloat" "(" Float ")" [function, klabel(sqrtFloat)]
  syntax Float ::= "sinFloat" "(" Float ")" [function, functional, hook(FLOAT.sin), klabel(sinFloat)]
  syntax Float ::= "roundFloat" "(" Float "," Int "," Int ")" [function, hook(FLOAT.round), klabel(roundFloat)]
  syntax Float ::= "rootFloat" "(" Float "," Int ")" [function, hook(FLOAT.root), klabel(rootFloat)]
  syntax Float ::= "minValueFloat" "(" Int "," Int ")" [function, hook(FLOAT.minValue), klabel(minValueFloat)]
  syntax Float ::= "minFloat" "(" Float "," Float ")" [function, hook(FLOAT.min), klabel(minFloat), smt-hook(fp.min)]
  syntax Float ::= "maxValueFloat" "(" Int "," Int ")" [function, hook(FLOAT.maxValue), klabel(maxValueFloat)]
  syntax Float ::= "maxFloat" "(" Float "," Float ")" [function, hook(FLOAT.max), klabel(maxFloat), smt-hook(fp.max)]
  syntax Float ::= "logFloat" "(" Float ")" [function, hook(FLOAT.log), klabel(logFloat)]
  syntax Float ::= "floorFloat" "(" Float ")" [function, functional, hook(FLOAT.floor), klabel(floorFloat)]
  syntax Float ::= "expFloat" "(" Float ")" [function, functional, hook(FLOAT.exp), klabel(expFloat)]
  syntax Float ::= "cosFloat" "(" Float ")" [function, functional, hook(FLOAT.cos), klabel(cosFloat)]
  syntax Float ::= "ceilFloat" "(" Float ")" [function, functional, hook(FLOAT.ceil), klabel(ceilFloat)]
  syntax Float ::= "atanFloat" "(" Float ")" [function, functional, hook(FLOAT.atan), klabel(atanFloat)]
  syntax Float ::= "atan2Float" "(" Float "," Float ")" [function, hook(FLOAT.atan2), klabel(atan2Float)]
  syntax Float ::= "asinFloat" "(" Float ")" [function, hook(FLOAT.asin), klabel(asinFloat)]
  syntax Float ::= "acosFloat" "(" Float ")" [function, hook(FLOAT.acos), klabel(acosFloat)]
  syntax Float ::= "absFloat" "(" Float ")" [function, functional, hook(FLOAT.abs), klabel(absFloat), smt-hook(fp.abs)]
  syntax Float ::= "Int2Float" "(" Int "," Int "," Int ")" [function, hook(FLOAT.int2float), klabel(Int2Float), latex({\\it{}Int2Float})]
  syntax Float ::= "--Float" Float [function, functional, hook(FLOAT.neg), smt-hook(fp.neg)]
  syntax Bool ::= Float ">Float" Float [function, hook(FLOAT.gt), latex({#1}\mathrel{>_{\scriptstyle\it Float}}{#2}), left, smt-hook(fg.gt)]
  syntax Bool ::= Float ">=Float" Float [function, hook(FLOAT.ge), latex({#1}\mathrel{\geq_{\scriptstyle\it Float}}{#2}), left, smt-hook(fp.geq)]
  syntax Bool ::= Float "==Float" Float [function, hook(FLOAT.eq), klabel(_==Float_), latex({#1}\mathrel{==_{\scriptstyle\it Float}}{#2}), left, smt-hook(fp.eq)]
  syntax Bool ::= Float "=/=Float" Float [function, latex({#1}\mathrel{\neq_{\scriptstyle\it Float}}{#2}), left, smt-hook((not (fp.eq #1 #2)))]
  syntax Bool ::= Float "<Float" Float [function, hook(FLOAT.lt), latex({#1}\mathrel{<_{\scriptstyle\it Float}}{#2}), left, smt-hook(fp.lt)]
  syntax Bool ::= Float "<=Float" Float [function, hook(FLOAT.le), latex({#1}\mathrel{\leq_{\scriptstyle\it Float}}{#2}), left, smt-hook(fp.leq)]
  syntax Bool ::= "signFloat" "(" Float ")" [function, functional, hook(FLOAT.sign), klabel(signFloat)]
  syntax Bool ::= "isNaN" "(" Float ")" [function, functional, hook(FLOAT.isNaN), klabel(isNaN), smt-hook(fp.isNaN)]
  syntax Bool ::= "isInfinite" "(" Float ")" [function, functional, klabel(isInfinite)]
endmodule


module FLOAT-SYNTAX [org.kframework.attributes.Location(Location(501,1,506,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports FLOAT-SYNTAX$SYNTAX
endmodule


module FLOAT-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(501,1,506,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  syntax Float [hook(FLOAT.Float), org.kframework.attributes.Location(Location(502,3,502,34)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  syntax Float ::= r"[\\+-]?Infinity([fFdD]|([pP][0-9]+[xX][0-9]+))?" [prec(3), token]
  syntax Float ::= r"NaN([fFdD]|([pP][0-9]+[xX][0-9]+))?" [prec(3), token]
  syntax Float ::= r"([\\+-]?[0-9]+(\\.[0-9]*)?|\\.[0-9]+)([eE][\\+-]?([0-9]+(\\.[0-9]*)?|\\.[0-9]d+))?([fFdD]|([pP][0-9]+[xX][0-9]+))?" [prec(1), token]
endmodule


module ID [org.kframework.attributes.Location(Location(875,1,880,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports ID-SYMBOLIC
  imports ID-COMMON
  imports ID$SYNTAX
  rule freshId(#SemanticCastToInt(I))=>`String2Id`(`_+String__STRING-COMMON`(#token("\"_\"","String"),`Int2String`(#SemanticCastToInt(I)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(879), org.kframework.attributes.Location(Location(879,8,879,62)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module ID$SYNTAX [org.kframework.attributes.Location(Location(875,1,880,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports ID-SYMBOLIC$SYNTAX
  imports ID-COMMON$SYNTAX
endmodule


module ID-COMMON [org.kframework.attributes.Location(Location(866,1,873,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports STRING
  imports ID-SYNTAX
  imports ID-COMMON$SYNTAX
endmodule


module ID-COMMON$SYNTAX [org.kframework.attributes.Location(Location(866,1,873,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports STRING$SYNTAX
  imports ID-SYNTAX$SYNTAX
  syntax String ::= "Id2String" "(" Id ")" [function, functional, hook(STRING.token2string), klabel(Id2String)]
  syntax Id ::= "freshId" "(" Int ")" [freshGenerator, function, functional, klabel(freshId)]
  syntax Id ::= "String2Id" "(" String ")" [function, functional, hook(STRING.string2token), klabel(String2Id)]
endmodule


module ID-SYMBOLIC [kast, org.kframework.attributes.Location(Location(882,1,888,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), symbolic]
  imports STRING
  imports ID-SYMBOLIC$SYNTAX
  imports ID-COMMON
  rule `String2Id`(#SemanticCastToString(S))=>`project:Id`(`#parseIdToken(_,_)_ID-SYMBOLIC`(#token("\"Id\"","String"),#SemanticCastToString(S))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(887), org.kframework.attributes.Location(Location(887,8,887,59)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module ID-SYMBOLIC$SYNTAX [kast, org.kframework.attributes.Location(Location(882,1,888,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), symbolic]
  imports STRING$SYNTAX
  imports ID-COMMON$SYNTAX
  syntax KItem ::= "#parseIdToken" "(" String "," String ")" [function, hook(STRING.parseToken)]
endmodule


module ID-SYNTAX [org.kframework.attributes.Location(Location(862,1,864,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports ID-SYNTAX$SYNTAX
endmodule


module ID-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(862,1,864,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  syntax Id [org.kframework.attributes.Location(Location(863,3,863,19)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), token]
endmodule


module ID-SYNTAX-PROGRAM-PARSING [org.kframework.attributes.Location(Location(855,1,860,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports ID-SYNTAX-PROGRAM-PARSING$SYNTAX
  imports BUILTIN-ID-TOKENS
endmodule


module ID-SYNTAX-PROGRAM-PARSING$SYNTAX [org.kframework.attributes.Location(Location(855,1,860,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports BUILTIN-ID-TOKENS$SYNTAX
  syntax Id ::= r"(?<![A-Za-z0-9\\_])[A-Za-z\\_][A-Za-z0-9\\_]*" [prec(1), token]
  syntax Id ::= #UpperId [token]
  syntax Id ::= #LowerId [token]
endmodule


module INT [org.kframework.attributes.Location(Location(469,1,499,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports K-EQUAL
  imports INT-KAST
  imports INT-COMMON
  imports INT$SYNTAX
  rule signExtendBitRangeInt(#SemanticCastToInt(I),#SemanticCastToInt(IDX),#SemanticCastToInt(LEN))=>`_-Int_`(`_modInt_`(`_+Int_`(bitRangeInt(#SemanticCastToInt(I),#SemanticCastToInt(IDX),#SemanticCastToInt(LEN)),`_<<Int_`(#token("1","Int"),`_-Int_`(#SemanticCastToInt(LEN),#token("1","Int")))),`_<<Int_`(#token("1","Int"),#SemanticCastToInt(LEN))),`_<<Int_`(#token("1","Int"),`_-Int_`(#SemanticCastToInt(LEN),#token("1","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(478), org.kframework.attributes.Location(Location(478,8,478,164)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule freshInt(#SemanticCastToInt(I))=>#SemanticCastToInt(I) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(495), org.kframework.attributes.Location(Location(495,8,495,28)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule bitRangeInt(#SemanticCastToInt(I),#SemanticCastToInt(IDX),#SemanticCastToInt(LEN))=>`_modInt_`(`_>>Int_`(#SemanticCastToInt(I),#SemanticCastToInt(IDX)),`_<<Int_`(#token("1","Int"),#SemanticCastToInt(LEN))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(476), org.kframework.attributes.Location(Location(476,8,476,85)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `minInt(_,_)_INT-COMMON`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>#SemanticCastToInt(I2) requires `_>=Int_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2)) ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(489), org.kframework.attributes.Location(Location(489,8,489,57)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  rule `minInt(_,_)_INT-COMMON`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>#SemanticCastToInt(I1) requires `_<=Int_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2)) ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(488), org.kframework.attributes.Location(Location(488,8,488,57)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  rule `_modInt_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>`_%Int_`(`_+Int_`(`_%Int_`(#SemanticCastToInt(I1),absInt(#SemanticCastToInt(I2))),absInt(#SemanticCastToInt(I2))),absInt(#SemanticCastToInt(I2))) requires `_=/=Int_`(#SemanticCastToInt(I2),#token("0","Int")) ensures #token("true","Bool") [concrete, contentStartColumn(5), contentStartLine(483), org.kframework.attributes.Location(Location(483,5,486,23)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  rule `_dividesInt__INT-COMMON`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>`_==Int_`(`_%Int_`(#SemanticCastToInt(I2),#SemanticCastToInt(I1)),#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(492), org.kframework.attributes.Location(Location(492,8,492,58)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_divInt_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>`_/Int_`(`_-Int_`(#SemanticCastToInt(I1),`_modInt_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))),#SemanticCastToInt(I2)) requires `_=/=Int_`(#SemanticCastToInt(I2),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(480), org.kframework.attributes.Location(Location(480,8,481,23)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  rule `_=/=Int_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>`notBool_`(`_==Int_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(491), org.kframework.attributes.Location(Location(491,8,491,53)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module INT$SYNTAX [org.kframework.attributes.Location(Location(469,1,499,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports K-EQUAL$SYNTAX
  imports INT-SYMBOLIC$SYNTAX
  imports INT-KORE$SYNTAX
  imports INT-KAST$SYNTAX
  imports INT-COMMON$SYNTAX
  syntax K ::= "srandInt" "(" Int ")" [function, hook(INT.srand), klabel(srandInt)]
  syntax Int ::= "randInt" "(" Int ")" [function, hook(INT.rand), klabel(randInt)]
  syntax Int ::= "freshInt" "(" Int ")" [freshGenerator, function, functional, klabel(freshInt)]
endmodule


module INT-COMMON [org.kframework.attributes.Location(Location(368,1,412,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports INT-SYNTAX
  imports INT-COMMON$SYNTAX
  imports BOOL
endmodule


module INT-COMMON$SYNTAX [org.kframework.attributes.Location(Location(368,1,412,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports INT-SYNTAX$SYNTAX
  imports BOOL$SYNTAX
  syntax priority ~Int_ > _^Int_ _^%Int__ > _divInt_ _%Int_ _/Int_ _*Int_ _modInt_ > _+Int_ _-Int_ > _>>Int_ _<<Int_ > _&Int_ > _xorInt_ > _|Int_
  syntax associativity left _|Int_
  syntax associativity left _xorInt_
  syntax associativity left _modInt_
  syntax associativity left _divInt_ _%Int_ _/Int_ _*Int_ _modInt_
  syntax associativity left _divInt_
  syntax associativity left _^Int_ _^%Int__
  syntax associativity left _^Int_
  syntax associativity left _^%Int__
  syntax associativity left _>Int_
  syntax associativity left _>>Int_ _<<Int_
  syntax associativity left _>>Int_
  syntax associativity left _>=Int_
  syntax associativity left _==Int_
  syntax associativity left _=/=Int_
  syntax associativity left _<Int_
  syntax associativity left _<=Int_
  syntax associativity left _<<Int_
  syntax associativity left _/Int_
  syntax associativity left _-Int_
  syntax associativity left _+Int_ _-Int_
  syntax associativity left _+Int_
  syntax associativity left _*Int_
  syntax associativity left _&Int_
  syntax associativity left _%Int_
  syntax Int ::= Int "|Int" Int [function, functional, hook(INT.or), klabel(_|Int_), latex({#1}\mathrel{|_{\scriptstyle\it Int}}{#2}), left, smtlib(orInt), symbol]
  syntax Int ::= Int "xorInt" Int [function, functional, hook(INT.xor), klabel(_xorInt_), latex({#1}\mathrel{\oplus_{\scriptstyle\it Int}}{#2}), left, smtlib(xorInt), symbol]
  syntax Int ::= Int "modInt" Int [function, hook(INT.emod), klabel(_modInt_), left, smt-hook(mod), symbol]
  syntax Int ::= Int "divInt" Int [function, hook(INT.ediv), klabel(_divInt_), left, smt-hook(div), symbol]
  syntax Int ::= Int "^Int" Int [function, hook(INT.pow), klabel(_^Int_), latex({#1}\mathrel{{\char`\^}_{\!\scriptstyle\it Int}}{#2}), left, smt-hook(^), symbol]
  syntax Int ::= Int "^%Int" Int Int [function, hook(INT.powmod), klabel(_^%Int__), left, smt-hook((mod (^ #1 #2) #3)), symbol]
  syntax Int ::= Int ">>Int" Int [function, hook(INT.shr), klabel(_>>Int_), latex({#1}\mathrel{\gg_{\scriptstyle\it Int}}{#2}), left, smtlib(shrInt), symbol]
  syntax Int ::= Int "<<Int" Int [function, hook(INT.shl), klabel(_<<Int_), latex({#1}\mathrel{\ll_{\scriptstyle\it Int}}{#2}), left, smtlib(shlInt), symbol]
  syntax Int ::= Int "/Int" Int [function, hook(INT.tdiv), klabel(_/Int_), latex({#1}\mathrel{\div_{\scriptstyle\it Int}}{#2}), left, smt-hook(div), symbol]
  syntax Int ::= Int "-Int" Int [function, functional, hook(INT.sub), klabel(_-Int_), latex({#1}\mathrel{-_{\scriptstyle\it Int}}{#2}), left, smt-hook(-), symbol]
  syntax Int ::= Int "+Int" Int [function, functional, hook(INT.add), klabel(_+Int_), latex({#1}\mathrel{+_{\scriptstyle\it Int}}{#2}), left, smt-hook(+), symbol]
  syntax Int ::= Int "*Int" Int [function, functional, hook(INT.mul), klabel(_*Int_), latex({#1}\mathrel{\ast_{\scriptstyle\it Int}}{#2}), left, smt-hook(*), symbol]
  syntax Int ::= Int "&Int" Int [function, functional, hook(INT.and), klabel(_&Int_), latex({#1}\mathrel{\&_{\scriptstyle\it Int}}{#2}), left, smtlib(andInt), symbol]
  syntax Int ::= Int "%Int" Int [function, hook(INT.tmod), klabel(_%Int_), latex({#1}\mathrel{\%_{\scriptstyle\it Int}}{#2}), left, smt-hook(mod), symbol]
  syntax Int ::= "~Int" Int [function, functional, hook(INT.not), klabel(~Int_), latex(\mathop{\sim_{\scriptstyle\it Int}}{#1}), smtlib(notInt), symbol]
  syntax Int ::= "signExtendBitRangeInt" "(" Int "," Int "," Int ")" [function, hook(INT.signExtendBitRange), klabel(signExtendBitRangeInt)]
  syntax Int ::= "minInt" "(" Int "," Int ")" [function, functional, hook(INT.min), smt-hook((ite (< #1 #2) #1 #2))]
  syntax Int ::= "maxInt" "(" Int "," Int ")" [function, functional, hook(INT.max), smt-hook((ite (< #1 #2) #2 #1))]
  syntax Int ::= "log2Int" "(" Int ")" [function, hook(INT.log2), klabel(log2Int)]
  syntax Int ::= "bitRangeInt" "(" Int "," Int "," Int ")" [function, hook(INT.bitRange), klabel(bitRangeInt)]
  syntax Int ::= "absInt" "(" Int ")" [function, functional, hook(INT.abs), klabel(absInt), smt-hook((ite (< #1 0) (- 0 #1) #1))]
  syntax Bool ::= Int "dividesInt" Int [function]
  syntax Bool ::= Int ">Int" Int [function, functional, hook(INT.gt), klabel(_>Int_), latex({#1}\mathrel{>_{\scriptstyle\it Int}}{#2}), left, smt-hook(>), symbol]
  syntax Bool ::= Int ">=Int" Int [function, functional, hook(INT.ge), klabel(_>=Int_), latex({#1}\mathrel{\geq_{\scriptstyle\it Int}}{#2}), left, smt-hook(>=), symbol]
  syntax Bool ::= Int "==Int" Int [function, functional, hook(INT.eq), klabel(_==Int_), latex({#1}\mathrel{{=}{=}_{\scriptstyle\it Int}}{#2}), left, smt-hook(=), symbol]
  syntax Bool ::= Int "=/=Int" Int [function, functional, hook(INT.ne), klabel(_=/=Int_), latex({#1}\mathrel{{=}{/}{=}_{\scriptstyle\it Int}}{#2}), left, smt-hook(distinct), symbol]
  syntax Bool ::= Int "<Int" Int [function, functional, hook(INT.lt), klabel(_<Int_), latex({#1}\mathrel{<_{\scriptstyle\it Int}}{#2}), left, smt-hook(<), symbol]
  syntax Bool ::= Int "<=Int" Int [function, functional, hook(INT.le), klabel(_<=Int_), latex({#1}\mathrel{\leq_{\scriptstyle\it Int}}{#2}), left, smt-hook(<=), symbol]
endmodule


module INT-KAST [kast, org.kframework.attributes.Location(Location(453,1,459,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports K-EQUAL
  imports INT-KAST$SYNTAX
  imports INT-COMMON
  rule `_==Int_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))=>`_==K_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(457), org.kframework.attributes.Location(Location(457,8,457,40)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module INT-KAST$SYNTAX [kast, org.kframework.attributes.Location(Location(453,1,459,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports K-EQUAL$SYNTAX
  imports INT-COMMON$SYNTAX
endmodule


module INT-KORE$SYNTAX [kore, org.kframework.attributes.Location(Location(461,1,467,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports K-EQUAL$SYNTAX
  imports INT-COMMON$SYNTAX
endmodule


module INT-SYMBOLIC$SYNTAX [kore, org.kframework.attributes.Location(Location(414,1,451,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), symbolic]
  imports ML-SYNTAX$SYNTAX
  imports INT-COMMON$SYNTAX
endmodule


module INT-SYNTAX [org.kframework.attributes.Location(Location(363,1,366,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports UNSIGNED-INT-SYNTAX
  imports INT-SYNTAX$SYNTAX
endmodule


module INT-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(363,1,366,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports UNSIGNED-INT-SYNTAX$SYNTAX
  syntax Int ::= r"[\\+-]?[0-9]+" [prec(2), prefer, token]
endmodule


module K [org.kframework.attributes.Location(Location(247,1,277,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports REQUIRES-ENSURES
  imports RECORD-PRODUCTIONS
  imports KSEQ-SYMBOLIC
  imports K-SORT-LATTICE
  imports K$SYNTAX
  imports AUTO-FOLLOW
  imports AUTO-CASTS
endmodule


module K$SYNTAX [org.kframework.attributes.Location(Location(247,1,277,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports REQUIRES-ENSURES$SYNTAX
  imports RECORD-PRODUCTIONS$SYNTAX
  imports KSEQ-SYMBOLIC$SYNTAX
  imports K-SORT-LATTICE$SYNTAX
  imports AUTO-FOLLOW$SYNTAX
  imports AUTO-CASTS$SYNTAX
  syntax {Sort} Sort ::= Sort "=>" Sort [klabel(#KRewrite), symbol]
  syntax {Sort} Sort ::= Sort "#as" Sort [klabel(#KAs), symbol]
  syntax {Sort} Sort ::= "#fun" "(" Sort ")" "(" Sort ")" [klabel(#fun2), prefer, symbol]
  syntax {Sort1, Sort2} Sort1 ::= "#fun" "(" Sort2 "=>" Sort1 ")" "(" Sort2 ")" [klabel(#fun3), symbol]
  syntax priority #KRewrite > #withConfig
  syntax associativity non-assoc #KRewrite
  syntax associativity left _:=K_ _:/=K_
  syntax Bool ::= K ":=K" K [equalEqualK, function, functional, klabel(_:=K_), symbol]
  syntax Bool ::= K ":/=K" K [function, functional, klabel(_:/=K_), notEqualEqualK, symbol]
endmodule


module K-BOTTOM-SORT [org.kframework.attributes.Location(Location(172,1,176,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports SORT-KBOTT
  imports K-BOTTOM-SORT$SYNTAX
endmodule


module K-BOTTOM-SORT$SYNTAX [org.kframework.attributes.Location(Location(172,1,176,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports SORT-KBOTT$SYNTAX
  syntax {Sort} Sort ::= KBott
  syntax KItem ::= KBott
endmodule


module K-EQUAL [org.kframework.attributes.Location(Location(928,1,940,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports K-EQUAL-SYNTAX
  imports K-EQUAL-KAST
  imports K-EQUAL$SYNTAX
  imports BOOL
  rule `_=/=K_`(#SemanticCastToK(K1),#SemanticCastToK(K2))=>`notBool_`(`_==K_`(#SemanticCastToK(K1),#SemanticCastToK(K2))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(935), org.kframework.attributes.Location(Location(935,8,935,45)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#if_#then_#else_#fi_K-EQUAL-SYNTAX`(#SemanticCastToBool(C),#SemanticCastToK(_),#SemanticCastToK(B2))=>#SemanticCastToK(B2) requires `notBool_`(#SemanticCastToBool(C)) ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(938), org.kframework.attributes.Location(Location(938,8,938,67)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  rule `#if_#then_#else_#fi_K-EQUAL-SYNTAX`(#SemanticCastToBool(C),#SemanticCastToK(B1),#SemanticCastToK(_))=>#SemanticCastToK(B1) requires #SemanticCastToBool(C) ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(937), org.kframework.attributes.Location(Location(937,8,937,59)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
endmodule


module K-EQUAL$SYNTAX [org.kframework.attributes.Location(Location(928,1,940,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports K-EQUAL-SYNTAX$SYNTAX
  imports K-EQUAL-SYMBOLIC$SYNTAX
  imports K-EQUAL-KORE$SYNTAX
  imports K-EQUAL-KAST$SYNTAX
  imports BOOL$SYNTAX
endmodule


module K-EQUAL-KAST [kast, org.kframework.attributes.Location(Location(912,1,918,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports K-EQUAL-SYNTAX
  imports K-EQUAL-KAST$SYNTAX
  imports BOOL
  rule `_==Bool_`(#SemanticCastToBool(K1),#SemanticCastToBool(K2))=>`_==K_`(#SemanticCastToBool(K1),#SemanticCastToBool(K2)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(916), org.kframework.attributes.Location(Location(916,8,916,43)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module K-EQUAL-KAST$SYNTAX [kast, org.kframework.attributes.Location(Location(912,1,918,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports K-EQUAL-SYNTAX$SYNTAX
  imports BOOL$SYNTAX
endmodule


module K-EQUAL-KORE$SYNTAX [kore, org.kframework.attributes.Location(Location(904,1,910,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports K-EQUAL-SYNTAX$SYNTAX
  imports BOOL$SYNTAX
endmodule


module K-EQUAL-SYMBOLIC$SYNTAX [kore, org.kframework.attributes.Location(Location(920,1,926,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), symbolic]
  imports K-EQUAL-SYNTAX$SYNTAX
endmodule


module K-EQUAL-SYNTAX [org.kframework.attributes.Location(Location(890,1,902,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports K-EQUAL-SYNTAX$SYNTAX
  imports BOOL
  imports BASIC-K
endmodule


module K-EQUAL-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(890,1,902,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports BOOL$SYNTAX
  imports BASIC-K$SYNTAX
  syntax {Sort} Sort ::= "#if" Bool "#then" Sort "#else" Sort "#fi" [function, functional, hook(KEQUAL.ite), smt-hook(ite)]
  syntax priority _:=K_ _=/=K_ _:/=K_ _==K_ > #And _orElseBool_ weakExistsFinally _orBool_ #Implies _andThenBool_ _impliesBool_ #Floor #Exists #Ceil _andBool_ #Forall #Not #Or notBool_ #AG #Equals _xorBool_
  syntax associativity left _=/=K_ _==K_
  syntax Bool ::= K "==K" K [equalEqualK, function, functional, hook(KEQUAL.eq), klabel(_==K_), latex({#1}\mathrel{=_K}{#2}), smt-hook(=), symbol]
  syntax Bool ::= K "=/=K" K [function, functional, hook(KEQUAL.ne), klabel(_=/=K_), latex({#1}\mathrel{\neq_K}{#2}), notEqualEqualK, smt-hook(distinct), symbol]
endmodule


module K-IO [org.kframework.attributes.Location(Location(977,1,1103,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports STRING
  imports LIST
  imports K-IO$SYNTAX
  rule `#stdout_K-IO`(.KList)=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(1083), org.kframework.attributes.Location(Location(1083,8,1083,20)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#stdin_K-IO`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(1082), org.kframework.attributes.Location(Location(1082,8,1082,19)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#stderr_K-IO`(.KList)=>#token("2","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(1084), org.kframework.attributes.Location(Location(1084,8,1084,20)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `#open(_)_K-IO`(#SemanticCastToString(S))=>`#open(_,_)_K-IO`(#SemanticCastToString(S),#token("\"r+\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(1076), org.kframework.attributes.Location(Location(1076,8,1076,48)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module K-IO$SYNTAX [org.kframework.attributes.Location(Location(977,1,1103,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports STRING$SYNTAX
  imports LIST$SYNTAX
  syntax Stream ::= "#buffer" "(" K ")" [klabel(#buffer)]
  syntax KItem ::= "#systemResult" "(" Int "," String "," String ")" [klabel(#systemResult), symbol]
  syntax KItem ::= "#system" "(" String ")" [function, hook(IO.system), impure, klabel(#system)]
  syntax KItem ::= "#stat" "(" String ")" [function, hook(IO.stat), impure]
  syntax KItem ::= "#opendir" "(" String ")" [function, hook(IO.opendir), impure]
  syntax KItem ::= "#lstat" "(" String ")" [function, hook(IO.lstat), impure]
  syntax K ::= "#write" "(" Int "," String ")" [function, hook(IO.write), impure]
  syntax K ::= "#unlock" "(" Int "," Int ")" [function, hook(IO.unlock), impure]
  syntax K ::= "#shutdownWrite" "(" Int ")" [function, hook(IO.shutdownWrite), impure]
  syntax K ::= "#seekEnd" "(" Int "," Int ")" [function, hook(IO.seekEnd), impure]
  syntax K ::= "#seek" "(" Int "," Int ")" [function, hook(IO.seek), impure]
  syntax K ::= "#remove" "(" String ")" [function, functional, hook(IO.remove), impure, klabel(#remove)]
  syntax K ::= "#putc" "(" Int "," Int ")" [function, hook(IO.putc), impure]
  syntax K ::= "#logToFile" "(" String "," String ")" [function, functional, hook(IO.log), impure, klabel(#logToFile), returnsUnit, symbol]
  syntax K ::= "#lock" "(" Int "," Int ")" [function, hook(IO.lock), impure]
  syntax K ::= "#close" "(" Int ")" [function, hook(IO.close), impure]
  syntax Int ::= "#time" "(" ")" [function, hook(IO.time), impure]
  syntax Int ::= "#stdout" [function, functional]
  syntax Int ::= "#stdin" [function, functional]
  syntax Int ::= "#stderr" [function, functional]
  syntax IOString ::= String
  syntax IOString ::= IOError
  syntax IOString ::= "#read" "(" Int "," Int ")" [function, hook(IO.read), impure]
  syntax IOInt ::= Int
  syntax IOInt ::= IOError
  syntax IOInt ::= "#tell" "(" Int ")" [function, hook(IO.tell), impure]
  syntax IOInt ::= "#open" "(" String "," String ")" [function, hook(IO.open), impure]
  syntax IOInt ::= "#open" "(" String ")" [function]
  syntax IOInt ::= "#getc" "(" Int ")" [function, hook(IO.getc), impure]
  syntax IOInt ::= "#accept" "(" Int ")" [function, hook(IO.accept), impure]
  syntax IOFile ::= IOError
  syntax IOFile ::= "#tempFile" "(" String "," Int ")" [klabel(#tempFile), symbol]
  syntax IOFile ::= "#mkstemp" "(" String ")" [function, hook(IO.mkstemp), impure, klabel(#mkstemp)]
  syntax IOError ::= "#unknownIOError" "(" Int ")" [klabel(#unknownIOError), symbol]
  syntax IOError ::= "#EXDEV" [klabel(#EXDEV), symbol]
  syntax IOError ::= "#EWOULDBLOCK" [klabel(#EWOULDBLOCK), symbol]
  syntax IOError ::= "#ETOOMANYREFS" [klabel(#ETOOMANYREFS), symbol]
  syntax IOError ::= "#ETIMEDOUT" [klabel(#ETIMEDOUT), symbol]
  syntax IOError ::= "#ESRCH" [klabel(#ESRCH), symbol]
  syntax IOError ::= "#ESPIPE" [klabel(#ESPIPE), symbol]
  syntax IOError ::= "#ESOCKTNOSUPPORT" [klabel(#ESOCKTNOSUPPORT), symbol]
  syntax IOError ::= "#ESHUTDOWN" [klabel(#ESHUTDOWN), symbol]
  syntax IOError ::= "#EROFS" [klabel(#EROFS), symbol]
  syntax IOError ::= "#ERANGE" [klabel(#ERANGE), symbol]
  syntax IOError ::= "#EPROTOTYPE" [klabel(#EPROTOTYPE), symbol]
  syntax IOError ::= "#EPROTONOSUPPORT" [klabel(#EPROTONOSUPPORT), symbol]
  syntax IOError ::= "#EPIPE" [klabel(#EPIPE), symbol]
  syntax IOError ::= "#EPFNOSUPPORT" [klabel(#EPFNOSUPPORT), symbol]
  syntax IOError ::= "#EPERM" [klabel(#EPERM), symbol]
  syntax IOError ::= "#EOVERFLOW" [klabel(#EOVERFLOW), symbol]
  syntax IOError ::= "#EOPNOTSUPP" [klabel(#EOPNOTSUPP), symbol]
  syntax IOError ::= "#EOF" [klabel(#EOF), symbol]
  syntax IOError ::= "#ENXIO" [klabel(#ENXIO), symbol]
  syntax IOError ::= "#ENOTTY" [klabel(#ENOTTY), symbol]
  syntax IOError ::= "#ENOTSOCK" [klabel(#ENOTSOCK), symbol]
  syntax IOError ::= "#ENOTEMPTY" [klabel(#ENOTEMPTY), symbol]
  syntax IOError ::= "#ENOTDIR" [klabel(#ENOTDIR), symbol]
  syntax IOError ::= "#ENOTCONN" [klabel(#ENOTCONN), symbol]
  syntax IOError ::= "#ENOSYS" [klabel(#ENOSYS), symbol]
  syntax IOError ::= "#ENOSPC" [klabel(#ENOSPC), symbol]
  syntax IOError ::= "#ENOPROTOOPT" [klabel(#ENOPROTOOPT), symbol]
  syntax IOError ::= "#ENOMEM" [klabel(#ENOMEM), symbol]
  syntax IOError ::= "#ENOLCK" [klabel(#ENOLCK), symbol]
  syntax IOError ::= "#ENOEXEC" [klabel(#ENOEXEC), symbol]
  syntax IOError ::= "#ENOENT" [klabel(#ENOENT), symbol]
  syntax IOError ::= "#ENODEV" [klabel(#ENODEV), symbol]
  syntax IOError ::= "#ENOBUFS" [klabel(#ENOBUFS), symbol]
  syntax IOError ::= "#ENFILE" [klabel(#ENFILE), symbol]
  syntax IOError ::= "#ENETUNREACH" [klabel(#ENETUNREACH), symbol]
  syntax IOError ::= "#ENETRESET" [klabel(#ENETRESET), symbol]
  syntax IOError ::= "#ENETDOWN" [klabel(#ENETDOWN), symbol]
  syntax IOError ::= "#ENAMETOOLONG" [klabel(#ENAMETOOLONG), symbol]
  syntax IOError ::= "#EMSGSIZE" [klabel(#EMSGSIZE), symbol]
  syntax IOError ::= "#EMLINK" [klabel(#EMLINK), symbol]
  syntax IOError ::= "#EMFILE" [klabel(#EMFILE), symbol]
  syntax IOError ::= "#ELOOP" [klabel(#ELOOP), symbol]
  syntax IOError ::= "#EISDIR" [klabel(#EISDIR), symbol]
  syntax IOError ::= "#EISCONN" [klabel(#EISCONN), symbol]
  syntax IOError ::= "#EIO" [klabel(#EIO), symbol]
  syntax IOError ::= "#EINVAL" [klabel(#EINVAL), symbol]
  syntax IOError ::= "#EINTR" [klabel(#EINTR), symbol]
  syntax IOError ::= "#EINPROGRESS" [klabel(#EINPROGRESS), symbol]
  syntax IOError ::= "#EHOSTUNREACH" [klabel(#EHOSTUNREACH), symbol]
  syntax IOError ::= "#EHOSTDOWN" [klabel(#EHOSTDOWN), symbol]
  syntax IOError ::= "#EFBIG" [klabel(#EFBIG), symbol]
  syntax IOError ::= "#EFAULT" [klabel(#EFAULT), symbol]
  syntax IOError ::= "#EEXIST" [klabel(#EEXIST), symbol]
  syntax IOError ::= "#EDOM" [klabel(#EDOM), symbol]
  syntax IOError ::= "#EDESTADDRREQ" [klabel(#EDESTADDRREQ), symbol]
  syntax IOError ::= "#EDEADLK" [klabel(#EDEADLK), symbol]
  syntax IOError ::= "#ECONNRESET" [klabel(#ECONNRESET), symbol]
  syntax IOError ::= "#ECONNREFUSED" [klabel(#ECONNREFUSED), symbol]
  syntax IOError ::= "#ECONNABORTED" [klabel(#ECONNABORTED), symbol]
  syntax IOError ::= "#ECHILD" [klabel(#ECHILD), symbol]
  syntax IOError ::= "#EBUSY" [klabel(#EBUSY), symbol]
  syntax IOError ::= "#EBADF" [klabel(#EBADF), symbol]
  syntax IOError ::= "#EALREADY" [klabel(#EALREADY), symbol]
  syntax IOError ::= "#EAGAIN" [klabel(#EAGAIN), symbol]
  syntax IOError ::= "#EAFNOSUPPORT" [klabel(#EAFNOSUPPORT), symbol]
  syntax IOError ::= "#EADDRNOTAVAIL" [klabel(#EADDRNOTAVAIL), symbol]
  syntax IOError ::= "#EADDRINUSE" [klabel(#EADDRINUSE), symbol]
  syntax IOError ::= "#EACCES" [klabel(#EACCES), symbol]
  syntax IOError ::= "#E2BIG" [klabel(#E2BIG), symbol]
endmodule


module K-REFLECTION [org.kframework.attributes.Location(Location(942,1,963,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports STRING
  imports K-REFLECTION-SYMBOLIC
  imports K-REFLECTION$SYNTAX
  imports BASIC-K
endmodule


module K-REFLECTION$SYNTAX [org.kframework.attributes.Location(Location(942,1,963,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports STRING$SYNTAX
  imports K-REFLECTION-SYMBOLIC$SYNTAX
  imports BASIC-K$SYNTAX
  syntax {Sort} Sort ::= "#parseKORE" "(" String ")" [function, hook(KREFLECTION.parseKORE), klabel(#parseKORE)]
  syntax {Sort} Sort ::= "#parseKAST" "(" String ")" [function, hook(KREFLECTION.parseKAST), klabel(#parseKAST)]
  syntax String ::= "#sort" "(" K ")" [function, hook(KREFLECTION.sort), klabel(#sort)]
  syntax String ::= "#getenv" "(" String ")" [function, hook(KREFLECTION.getenv), impure, klabel(#getenv)]
  syntax List ::= "#argv" "(" ")" [function, hook(KREFLECTION.argv), klabel(#argv)]
  syntax KItem ::= "getKLabel" "(" K ")" [function, hook(KREFLECTION.getKLabel), klabel(getKLabel)]
  syntax KItem ::= "#fresh" "(" String ")" [function, hook(KREFLECTION.fresh), impure, klabel(#fresh)]
  syntax K ::= "#configuration" [function, hook(KREFLECTION.configuration), impure]
  syntax IOError ::= "#noParse" "(" String ")" [klabel(#noParse), symbol]
endmodule


module K-REFLECTION-SYMBOLIC [org.kframework.attributes.Location(Location(965,1,975,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), symbolic]
  imports STRING
  imports K-REFLECTION-SYMBOLIC$SYNTAX
  imports BASIC-K
endmodule


module K-REFLECTION-SYMBOLIC$SYNTAX [org.kframework.attributes.Location(Location(965,1,975,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), symbolic]
  imports STRING$SYNTAX
  imports BASIC-K$SYNTAX
  syntax String ::= "#getKLabelString" "(" K ")" [function, hook(KREFLECTION.getKLabelString), klabel(#getKLabelString)]
  syntax Bool ::= "#isVariable" "(" K ")" [function, hook(KREFLECTION.isVariable), klabel(#isVariable)]
  syntax Bool ::= "#isConcrete" "(" K ")" [function, hook(KREFLECTION.isConcrete), klabel(#isConcrete)]
endmodule


module K-SORT-LATTICE [org.kframework.attributes.Location(Location(178,1,181,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports K-TOP-SORT
  imports K-SORT-LATTICE$SYNTAX
  imports K-BOTTOM-SORT
endmodule


module K-SORT-LATTICE$SYNTAX [org.kframework.attributes.Location(Location(178,1,181,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports K-TOP-SORT$SYNTAX
  imports K-BOTTOM-SORT$SYNTAX
endmodule


module K-TERM [org.kframework.attributes.Location(Location(280,1,286,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports RECORD-PRODUCTIONS
  imports KSEQ-SYMBOLIC
  imports K-TERM$SYNTAX
  imports K-SORT-LATTICE
  imports AUTO-FOLLOW
  imports AUTO-CASTS
endmodule


module K-TERM$SYNTAX [org.kframework.attributes.Location(Location(280,1,286,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports RECORD-PRODUCTIONS$SYNTAX
  imports KSEQ-SYMBOLIC$SYNTAX
  imports K-SORT-LATTICE$SYNTAX
  imports AUTO-FOLLOW$SYNTAX
  imports AUTO-CASTS$SYNTAX
endmodule


module K-TOP-SORT [org.kframework.attributes.Location(Location(166,1,170,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports SORT-KBOTT
  imports K-TOP-SORT$SYNTAX
endmodule


module K-TOP-SORT$SYNTAX [org.kframework.attributes.Location(Location(166,1,170,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports SORT-KBOTT$SYNTAX
  syntax {Sort} KItem ::= Sort
  syntax KItem ::= KBott
endmodule


module KAST [org.kframework.attributes.Location(Location(30,1,50,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports SORT-KBOTT
  imports KSTRING
  imports KAST$SYNTAX
  imports BUILTIN-ID-TOKENS
  imports BASIC-K
endmodule


module KAST$SYNTAX [org.kframework.attributes.Location(Location(30,1,50,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports SORT-KBOTT$SYNTAX
  imports KSTRING$SYNTAX
  imports BUILTIN-ID-TOKENS$SYNTAX
  imports BASIC-K$SYNTAX
  syntax associativity left #KList
  syntax KList ::= KList "," KList [assoc, klabel(#KList), left, prefer, symbol, unit(#EmptyKList)]
  syntax KList ::= K
  syntax KList ::= ".KList" [klabel(#EmptyKList), symbol]
  syntax KList ::= ".::KList" [klabel(#EmptyKList), symbol]
  syntax KLabel ::= r"`(\\\\`|\\\\\\\\|[^`\\\\\\n\\r])+`" [token]
  syntax KLabel ::= r"(?<![a-zA-Z0-9])[#a-z][a-zA-Z0-9]*" [prec(1), token]
  syntax KLabel ::= #LowerId [token]
  syntax KItem ::= KBott
  syntax KBott ::= KLabel "(" KList ")" [klabel(#KApply), symbol]
  syntax KBott ::= "#token" "(" KString "," KString ")" [klabel(#KToken), symbol]
  syntax KBott ::= "#klabel" "(" KLabel ")" [klabel(#WrappedKLabel), symbol]
endmodule


module KCELLS [org.kframework.attributes.Location(Location(109,1,122,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports KCELLS$SYNTAX
  imports KAST
endmodule


module KCELLS$SYNTAX [org.kframework.attributes.Location(Location(109,1,122,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports KAST$SYNTAX
  syntax associativity non-assoc #withConfig
  syntax associativity left #cells
  syntax KItem ::= Bag
  syntax Cell [org.kframework.attributes.Location(Location(112,3,112,13)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  syntax Bag ::= KBott
  syntax Bag ::= Cell
  syntax Bag ::= Bag Bag [assoc, klabel(#cells), left, symbol, unit(#cells)]
  syntax Bag ::= ".Bag" [klabel(#cells), symbol]
  syntax Bag ::= ".::Bag" [klabel(#cells), symbol]
  syntax Bag ::= "(" Bag ")" [bracket]
  syntax #RuleBody ::= "[" "[" K "]" "]" Bag [avoid, klabel(#withConfig), symbol]
endmodule


module KSEQ [org.kframework.attributes.Location(Location(54,1,63,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports KSEQ$SYNTAX
  imports KAST
  imports K-TOP-SORT
endmodule


module KSEQ$SYNTAX [org.kframework.attributes.Location(Location(54,1,63,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports KAST$SYNTAX
  imports K-TOP-SORT$SYNTAX
  syntax {Sort} Sort ::= "(" Sort ")" [bracket]
  syntax associativity left #KSequence
  syntax K ::= K "~>" K [assoc, klabel(#KSequence), left, symbol, unit(#EmptyK)]
  syntax K ::= ".K" [klabel(#EmptyK), symbol, unparseAvoid]
  syntax K ::= ".::K" [klabel(#EmptyK), symbol, unparseAvoid]
  syntax K ::= "." [klabel(#EmptyK), symbol]
endmodule


module KSEQ-SYMBOLIC [org.kframework.attributes.Location(Location(96,1,107,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports ML-SYNTAX
  imports KVARIABLE-SYNTAX
  imports KSEQ-SYMBOLIC$SYNTAX
  imports KSEQ
endmodule


module KSEQ-SYMBOLIC$SYNTAX [org.kframework.attributes.Location(Location(96,1,107,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports ML-SYNTAX$SYNTAX
  imports KVARIABLE-SYNTAX$SYNTAX
  imports KSEQ$SYNTAX
  syntax KLabel ::= #KVariable
  syntax KConfigVar ::= r"(?<![A-Za-z0-9_\\$!\\?@])(\\$)([A-Z][A-Za-z0-9'_]*)" [token]
  syntax KBott ::= KConfigVar
  syntax KBott ::= #KVariable
  syntax #KVariable ::= r"(?<![A-Za-z0-9_\\$!\\?@])(\\!|\\?|@)?([A-Z][A-Za-z0-9'_]*|_)" [prec(1), token]
  syntax #KVariable ::= #UpperId [token]
endmodule


module KSTRING [org.kframework.attributes.Location(Location(15,1,18,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports KSTRING$SYNTAX
endmodule


module KSTRING$SYNTAX [org.kframework.attributes.Location(Location(15,1,18,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  syntax KString ::= r"[\\\"](([^\\\"\\n\\r\\\\])|([\\\\][nrtf\\\"\\\\])|([\\\\][x][0-9a-fA-F]{2})|([\\\\][u][0-9a-fA-F]{4})|([\\\\][U][0-9a-fA-F]{8}))*[\\\"]" [token]
endmodule


module KVAR [org.kframework.attributes.Location(Location(31,1,36,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/substitution.k))]
  imports KVAR-SYMBOLIC
  imports KVAR-COMMON
  imports KVAR$SYNTAX
  rule freshKVar(#SemanticCastToInt(I))=>`String2KVar`(`_+String__STRING-COMMON`(#token("\"_\"","String"),`Int2String`(#SemanticCastToInt(I)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(35), org.kframework.attributes.Location(Location(35,8,35,66)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/substitution.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module KVAR$SYNTAX [org.kframework.attributes.Location(Location(31,1,36,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/substitution.k))]
  imports KVAR-SYMBOLIC$SYNTAX
  imports KVAR-COMMON$SYNTAX
endmodule


module KVAR-COMMON [org.kframework.attributes.Location(Location(16,1,22,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/substitution.k))]
  imports STRING
  imports KVAR-SYNTAX
  imports KVAR-COMMON$SYNTAX
endmodule


module KVAR-COMMON$SYNTAX [org.kframework.attributes.Location(Location(16,1,22,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/substitution.k))]
  imports STRING$SYNTAX
  imports KVAR-SYNTAX$SYNTAX
  syntax KVar ::= "freshKVar" "(" Int ")" [freshGenerator, function, functional, klabel(freshKVar)]
  syntax KVar ::= "String2KVar" "(" String ")" [function, functional, hook(STRING.string2token), klabel(String2KVar)]
endmodule


module KVAR-SYMBOLIC [kast, org.kframework.attributes.Location(Location(24,1,29,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/substitution.k)), symbolic]
  imports KVAR-SYMBOLIC$SYNTAX
  imports KVAR-COMMON
  rule `String2KVar`(#SemanticCastToString(S))=>`project:KVar`(#parseKVar(#token("\"KVar\"","String"),#SemanticCastToString(S))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(28), org.kframework.attributes.Location(Location(28,8,28,63)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/substitution.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module KVAR-SYMBOLIC$SYNTAX [kast, org.kframework.attributes.Location(Location(24,1,29,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/substitution.k)), symbolic]
  imports KVAR-COMMON$SYNTAX
  syntax KItem ::= "#parseToken" "(" String "," String ")" [function, hook(STRING.parseToken), klabel(#parseKVar)]
endmodule


module KVAR-SYNTAX [org.kframework.attributes.Location(Location(12,1,14,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/substitution.k))]
  imports KVAR-SYNTAX$SYNTAX
endmodule


module KVAR-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(12,1,14,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/substitution.k))]
  syntax KVar [hook(KVAR.KVar), org.kframework.attributes.Location(Location(13,3,13,38)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/substitution.k)), token]
endmodule


module KVAR-SYNTAX-PROGRAM-PARSING [org.kframework.attributes.Location(Location(3,1,10,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/substitution.k))]
  imports KVAR-SYNTAX-PROGRAM-PARSING$SYNTAX
  imports BUILTIN-ID-TOKENS
endmodule


module KVAR-SYNTAX-PROGRAM-PARSING$SYNTAX [org.kframework.attributes.Location(Location(3,1,10,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/substitution.k))]
  imports BUILTIN-ID-TOKENS$SYNTAX
  syntax KVar ::= r"(?<![A-Za-z0-9\\_])[A-Za-z\\_][A-Za-z0-9\\_]*" [prec(1), token]
  syntax KVar ::= #UpperId [token]
  syntax KVar ::= #LowerId [token]
endmodule


module KVARIABLE-SYNTAX [org.kframework.attributes.Location(Location(91,1,93,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports KVARIABLE-SYNTAX$SYNTAX
endmodule


module KVARIABLE-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(91,1,93,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  syntax #KVariable [org.kframework.attributes.Location(Location(92,3,92,19)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
endmodule


module LIST [org.kframework.attributes.Location(Location(225,1,290,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports LIST$SYNTAX
  imports INT-SYNTAX
  imports BASIC-K
endmodule


module LIST$SYNTAX [org.kframework.attributes.Location(Location(225,1,290,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports INT-SYNTAX$SYNTAX
  imports BASIC-K$SYNTAX
  syntax associativity left _List_
  syntax List [hook(LIST.List), org.kframework.attributes.Location(Location(229,3,229,31)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  syntax List ::= List List [assoc, element(ListItem), format(%1%n%2), function, functional, hook(LIST.concat), klabel(_List_), left, smtlib(smt_seq_concat), symbol, unit(.List)]
  syntax List ::= List "[" Int "<-" KItem "]" [function, hook(LIST.update), klabel(List:set)]
  syntax List ::= "updateList" "(" List "," Int "," List ")" [function, hook(LIST.updateAll), klabel(updateList)]
  syntax List ::= "range" "(" List "," Int "," Int ")" [function, hook(LIST.range), klabel(List:range), symbol]
  syntax List ::= "makeList" "(" Int "," KItem ")" [function, hook(LIST.make), klabel(makeList)]
  syntax List ::= "fillList" "(" List "," Int "," Int "," KItem ")" [function, hook(LIST.fill), klabel(fillList)]
  syntax List ::= "ListItem" "(" KItem ")" [function, functional, hook(LIST.element), klabel(ListItem), smtlib(smt_seq_elem), symbol]
  syntax List ::= ".List" [function, functional, hook(LIST.unit), klabel(.List), latex(\dotCt{List}), smtlib(smt_seq_nil), symbol]
  syntax KItem ::= List "[" Int "]" [function, hook(LIST.get), klabel(List:get), symbol]
  syntax Int ::= "size" "(" List ")" [function, functional, hook(LIST.size), klabel(sizeList), smtlib(smt_seq_len)]
  syntax Bool ::= KItem "in" List [function, functional, hook(LIST.in), klabel(_inList_)]
endmodule


module LOGIC [org.kframework.attributes.Location(Location(24,1,266,9)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k))]
  imports SUBSTITUTION
  imports MAP
  imports LOGIC-SYNTAX
  imports LOGIC$SYNTAX
  imports DOMAINS
  syntax Cell ::= StatesCell
  syntax Cell ::= KCell
  syntax Cell ::= GeneratedTopCell
  syntax Cell ::= BlocksCell
  rule vars(func(#SemanticCastToString(F),#SemanticCastToList(Args)))=>vars(#SemanticCastToList(Args)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(62), org.kframework.attributes.Location(Location(62,10,62,43)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule vars(`_Set_`(`SetItem`(`_~=__LOGIC`(#SemanticCastToKItem(A),#SemanticCastToKItem(B))),#SemanticCastToSet(S)))=>`_Set_`(`_Set_`(vars(#SemanticCastToKItem(A)),vars(#SemanticCastToKItem(B))),vars(#SemanticCastToSet(S))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(64), org.kframework.attributes.Location(Location(64,10,64,60)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule vars(`_Set_`(`SetItem`(`_=__LOGIC`(#SemanticCastToKItem(A),#SemanticCastToKItem(B))),#SemanticCastToSet(S)))=>`_Set_`(`_Set_`(vars(#SemanticCastToKItem(A)),vars(#SemanticCastToKItem(B))),vars(#SemanticCastToSet(S))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(63), org.kframework.attributes.Location(Location(63,10,63,59)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule vars(`_List_`(`ListItem`(#SemanticCastToKItem(A)),#SemanticCastToList(L)))=>`_Set_`(vars(#SemanticCastToKItem(A)),vars(#SemanticCastToList(L))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(61), org.kframework.attributes.Location(Location(61,10,61,48)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule vars(`.Set`(.KList))=>`.Set`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(59), org.kframework.attributes.Location(Location(59,10,59,28)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule vars(`.List`(.KList))=>`.Set`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(60), org.kframework.attributes.Location(Location(60,10,60,29)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule vars(#SemanticCastToInt(I))=>`.Set`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(58), org.kframework.attributes.Location(Location(58,10,58,29)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule vars(#SemanticCastToId(S))=>`SetItem`(#SemanticCastToId(S)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(57), org.kframework.attributes.Location(Location(57,10,57,34)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule unifPossible(`_Set_`(`SetItem`(`_~=__LOGIC`(#SemanticCastToId(A),#SemanticCastToKItem(B))),#SemanticCastToSet(Unif)))=>`_andBool_`(`_=/=K_`(#SemanticCastToId(A),#SemanticCastToKItem(B)),unifPossible(#SemanticCastToSet(Unif))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(95), org.kframework.attributes.Location(Location(95,10,95,86)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule unifPossible(`_Set_`(`SetItem`(`_=__LOGIC`(func(#SemanticCastToString(F),#SemanticCastToList(_)),func(#SemanticCastToString(G),#SemanticCastToList(_)))),#SemanticCastToSet(Unif)))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(97), org.kframework.attributes.Location(Location(97,10,97,70)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule unifPossible(`_Set_`(`SetItem`(`_=__LOGIC`(#SemanticCastToInt(I1),#SemanticCastToInt(I2))),#SemanticCastToSet(Unif)))=>`_andBool_`(`_==Int_`(#SemanticCastToInt(I1),#SemanticCastToInt(I2)),unifPossible(#SemanticCastToSet(Unif))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(94), org.kframework.attributes.Location(Location(94,10,94,95)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule unifPossible(`_Set_`(`SetItem`(`_=__LOGIC`(#SemanticCastToId(A),#SemanticCastToKItem(B))),#SemanticCastToSet(Unif)))=>`_andBool_`(`notBool_`(`Set:in`(#SemanticCastToId(A),vars(#SemanticCastToKItem(B)))),unifPossible(#SemanticCastToSet(Unif))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(98), org.kframework.attributes.Location(Location(98,10,99,58)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule unifPossible(`.Set`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(93), org.kframework.attributes.Location(Location(93,10,93,36)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule unifDone(`_Set_`(`SetItem`(`_=__LOGIC`(#SemanticCastToKItem(A),#SemanticCastToKItem(B))),#SemanticCastToSet(Unif)))=>`_andBool_`(`_andBool_`(`_andBool_`(`_andBool_`(`_=/=K_`(#SemanticCastToKItem(A),#SemanticCastToKItem(B)),`notBool_`(`_andBool_`(`Set:in`(#SemanticCastToKItem(A),vars(#SemanticCastToSet(Unif))),`Set:in`(#SemanticCastToKItem(B),vars(#SemanticCastToSet(Unif)))))),`notBool_`(sameFuncName(#SemanticCastToKItem(A),#SemanticCastToKItem(B)))),`notBool_`(`_andBool_`(`_andBool_`(`notBool_`(`Set:in`(#SemanticCastToKItem(A),vars(#SemanticCastToKItem(B)))),`notBool_`(`Set:in`(#SemanticCastToKItem(B),vars(#SemanticCastToKItem(B))))),`Set:in`(#SemanticCastToKItem(A),vars(#SemanticCastToSet(Unif)))))),unifDone(#SemanticCastToSet(Unif))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(107), org.kframework.attributes.Location(Location(107,10,113,24)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule unifDone(`.Set`(.KList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(106), org.kframework.attributes.Location(Location(106,10,106,32)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule sortUnif(`_Set_`(`SetItem`(`_~=__LOGIC`(#SemanticCastToKItem(A),#SemanticCastToKItem(B))),#SemanticCastToSet(Unif)))=>`_Set_`(`SetItem`(`_~=__LOGIC`(#SemanticCastToKItem(B),#SemanticCastToKItem(A))),sortUnif(#SemanticCastToSet(Unif))) requires isLt(#SemanticCastToKItem(B),#SemanticCastToKItem(A)) ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(88), org.kframework.attributes.Location(Location(88,10,89,28)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  rule sortUnif(`_Set_`(`SetItem`(`_~=__LOGIC`(#SemanticCastToKItem(A),#SemanticCastToKItem(B))),#SemanticCastToSet(Unif)))=>`_Set_`(`SetItem`(`_~=__LOGIC`(#SemanticCastToKItem(A),#SemanticCastToKItem(B))),sortUnif(#SemanticCastToSet(Unif))) requires `notBool_`(isLt(#SemanticCastToKItem(B),#SemanticCastToKItem(A))) ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(90), org.kframework.attributes.Location(Location(90,10,91,37)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  rule sortUnif(`_Set_`(`SetItem`(`_=__LOGIC`(#SemanticCastToKItem(A),#SemanticCastToKItem(B))),#SemanticCastToSet(Unif)))=>`_Set_`(`SetItem`(`_=__LOGIC`(#SemanticCastToKItem(B),#SemanticCastToKItem(A))),sortUnif(#SemanticCastToSet(Unif))) requires isLt(#SemanticCastToKItem(B),#SemanticCastToKItem(A)) ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(84), org.kframework.attributes.Location(Location(84,10,85,28)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  rule sortUnif(`_Set_`(`SetItem`(`_=__LOGIC`(#SemanticCastToKItem(A),#SemanticCastToKItem(B))),#SemanticCastToSet(Unif)))=>`_Set_`(`SetItem`(`_=__LOGIC`(#SemanticCastToKItem(A),#SemanticCastToKItem(B))),sortUnif(#SemanticCastToSet(Unif))) requires `notBool_`(isLt(#SemanticCastToKItem(B),#SemanticCastToKItem(A))) ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(86), org.kframework.attributes.Location(Location(86,10,87,37)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  rule sortUnif(`.Set`(.KList))=>`.Set`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(83), org.kframework.attributes.Location(Location(83,10,83,32)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule sameFuncName(func(#SemanticCastToString(F),#SemanticCastToList(_)),func(#SemanticCastToString(G),#SemanticCastToList(_)))=>`_==String__STRING-COMMON`(#SemanticCastToString(F),#SemanticCastToString(G)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(102), org.kframework.attributes.Location(Location(102,10,102,62)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule sameFuncName(#SemanticCastToInt(A),#SemanticCastToKItem(_))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(104), org.kframework.attributes.Location(Location(104,10,104,41)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule sameFuncName(#SemanticCastToId(A),#SemanticCastToKItem(_))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(103), org.kframework.attributes.Location(Location(103,10,103,40)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule performUnif(`_Set_`(`SetItem`(`_=__LOGIC`(#SemanticCastToKItem(X),#SemanticCastToKItem(T))),#SemanticCastToSet(Unif)=>`_[_]_SUBSTITUTION`(#SemanticCastToSet(Unif),`_|->_`(#SemanticCastToKItem(X),#SemanticCastToKItem(T))))) requires `_andBool_`(`_andBool_`(`Set:in`(#SemanticCastToKItem(X),vars(#SemanticCastToSet(Unif))),`notBool_`(`Set:in`(#SemanticCastToKItem(X),vars(#SemanticCastToKItem(T))))),`notBool_`(`Set:in`(#SemanticCastToKItem(T),vars(#SemanticCastToKItem(T))))) ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(116), org.kframework.attributes.Location(Location(116,10,120,35)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  rule performUnif(`_Set_`(`SetItem`(`_=__LOGIC`(#SemanticCastToKItem(A),#SemanticCastToKItem(B))),#SemanticCastToSet(Unif)=>`_[_]_SUBSTITUTION`(#SemanticCastToSet(Unif),`_|->_`(#SemanticCastToKItem(B),#SemanticCastToKItem(A))))) requires `_andBool_`(`_andBool_`(`_=/=K_`(#SemanticCastToKItem(A),#SemanticCastToKItem(B)),`Set:in`(#SemanticCastToKItem(A),vars(#SemanticCastToSet(Unif)))),`Set:in`(#SemanticCastToKItem(B),vars(#SemanticCastToSet(Unif)))) ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(121), org.kframework.attributes.Location(Location(121,10,125,28)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  rule performUnif(`_Set_`(`SetItem`(`_=__LOGIC`(#SemanticCastToKItem(A),#SemanticCastToKItem(A))),#SemanticCastToSet(Unif)))=>performUnif(#SemanticCastToSet(Unif)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(115), org.kframework.attributes.Location(Location(115,10,115,63)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule performUnif(#SemanticCastToSet(Unif))=>#SemanticCastToSet(Unif) requires unifDone(#SemanticCastToSet(Unif)) ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(126), org.kframework.attributes.Location(Location(126,10,127,32)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  rule isLt(func(#SemanticCastToString(F),#SemanticCastToList(ArgsF)),func(#SemanticCastToString(G),#SemanticCastToList(ArgsG)))=>`_orBool_`(`_<String__STRING-COMMON`(#SemanticCastToString(F),#SemanticCastToString(G)),`_andBool_`(`_==String__STRING-COMMON`(#SemanticCastToString(F),#SemanticCastToString(G)),isLt(#SemanticCastToList(ArgsF),#SemanticCastToList(ArgsG)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(77), org.kframework.attributes.Location(Location(77,10,79,51)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule isLt(`_List_`(`ListItem`(#SemanticCastToKItem(A)),#SemanticCastToList(As)),`_List_`(`ListItem`(#SemanticCastToKItem(B)),#SemanticCastToList(Bs)))=>`_orBool_`(isLt(#SemanticCastToKItem(A),#SemanticCastToKItem(B)),`_andBool_`(`_==K_`(#SemanticCastToKItem(A),#SemanticCastToKItem(B)),isLt(#SemanticCastToList(As),#SemanticCastToList(Bs)))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(81), org.kframework.attributes.Location(Location(81,10,81,98)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule isLt(`.List`(.KList),`.List`(.KList))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(80), org.kframework.attributes.Location(Location(80,10,80,37)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule isLt(#SemanticCastToInt(A),#SemanticCastToInt(B))=>`_<Int_`(#SemanticCastToInt(A),#SemanticCastToInt(B)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(75), org.kframework.attributes.Location(Location(75,10,75,40)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule isLt(#SemanticCastToInt(A),#SemanticCastToId(B))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(70), org.kframework.attributes.Location(Location(70,10,70,36)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule isLt(#SemanticCastToInt(A),#SemanticCastToFunc(B))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(68), org.kframework.attributes.Location(Location(68,10,68,37)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule isLt(#SemanticCastToId(A),#SemanticCastToInt(B))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(66), org.kframework.attributes.Location(Location(66,10,66,35)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule isLt(#SemanticCastToId(A),#SemanticCastToId(B))=>`_<String__STRING-COMMON`(`Id2String`(#SemanticCastToId(A)),`Id2String`(#SemanticCastToId(B))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(74), org.kframework.attributes.Location(Location(74,10,74,63)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule isLt(#SemanticCastToId(A),#SemanticCastToFunc(B))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(67), org.kframework.attributes.Location(Location(67,10,67,36)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule isLt(#SemanticCastToFunc(A),#SemanticCastToInt(B))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(72), org.kframework.attributes.Location(Location(72,10,72,38)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule isLt(#SemanticCastToFunc(A),#SemanticCastToId(B))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10), contentStartLine(71), org.kframework.attributes.Location(Location(71,10,71,37)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule initStatesCell(.KList)=>`<states>`(#noDots(.KList),`.List`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initKCell(Init)=>`<k>`(#noDots(.KList),#SemanticCastToProgram(`project:Program`(`Map:lookup`(Init,#token("$PGM","KConfigVar")))),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initGeneratedTopCell(Init)=>`<generatedTop>`(#noDots(.KList),#cells(initKCell(Init),initBlocksCell(.KList),initStatesCell(.KList)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule initBlocksCell(.KList)=>`<blocks>`(#noDots(.KList),`.Map`(.KList),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule `<states>`(#noDots(.KList),`_List_`(`ListItem`(state(`_;__LOGIC-SYNTAX`(`var__LOGIC-SYNTAX`(#SemanticCastToId(V)),#SemanticCastToInstr(Is)),#SemanticCastToSet(Unif),#SemanticCastToList(Stack))),#SemanticCastToList(States))=>`_List_`(#SemanticCastToList(States),`ListItem`(state(#SemanticCastToInstr(Is),#SemanticCastToSet(Unif),`_List_`(`ListItem`(#SemanticCastToId(V)),#SemanticCastToList(Stack))))),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(9), contentStartLine(202), org.kframework.attributes.Location(Location(202,9,208,18)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<states>`(#noDots(.KList),`_List_`(`ListItem`(state(`_;__LOGIC-SYNTAX`(`int__LOGIC-SYNTAX`(#SemanticCastToInt(I)),#SemanticCastToInstr(Is)),#SemanticCastToSet(Unif),#SemanticCastToList(Stack))),#SemanticCastToList(States))=>`_List_`(#SemanticCastToList(States),`ListItem`(state(#SemanticCastToInstr(Is),#SemanticCastToSet(Unif),`_List_`(`ListItem`(#SemanticCastToInt(I)),#SemanticCastToList(Stack))))),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(9), contentStartLine(211), org.kframework.attributes.Location(Location(211,9,217,18)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<states>`(#noDots(.KList),`_List_`(`ListItem`(state(`_;__LOGIC-SYNTAX`(#token("unify","SingleInstr"),#SemanticCastToInstr(Is)),#SemanticCastToSet(Unif),`_List_`(`_List_`(`ListItem`(#SemanticCastToKItem(A)),`ListItem`(#SemanticCastToKItem(B))),#SemanticCastToList(Stack)))),#SemanticCastToList(States))=>`_List_`(#SemanticCastToList(States),`ListItem`(runUnif(#SemanticCastToInstr(Is),`_Set_`(`SetItem`(`_=__LOGIC`(#SemanticCastToKItem(A),#SemanticCastToKItem(B))),#SemanticCastToSet(Unif)),#SemanticCastToList(Stack)))),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(9), contentStartLine(220), org.kframework.attributes.Location(Location(220,9,226,18)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<states>`(#noDots(.KList),`_List_`(`ListItem`(state(`_;__LOGIC-SYNTAX`(#token("rot","SingleInstr"),#SemanticCastToInstr(Is)),#SemanticCastToSet(Unif),`_List_`(`ListItem`(#SemanticCastToKItem(A)),#SemanticCastToList(Stack)))),#SemanticCastToList(States))=>`_List_`(#SemanticCastToList(States),`ListItem`(state(#SemanticCastToInstr(Is),#SemanticCastToSet(Unif),`_List_`(#SemanticCastToList(Stack),`ListItem`(#SemanticCastToKItem(A)))))),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(9), contentStartLine(256), org.kframework.attributes.Location(Location(256,9,262,18)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<states>`(#noDots(.KList),`_List_`(`ListItem`(state(`_;__LOGIC-SYNTAX`(#token("pop","SingleInstr"),#SemanticCastToInstr(Is)),#SemanticCastToSet(Unif),`_List_`(`ListItem`(#SemanticCastToKItem(A)),#SemanticCastToList(Stack)))),#SemanticCastToList(States))=>`_List_`(#SemanticCastToList(States),`ListItem`(state(#SemanticCastToInstr(Is),#SemanticCastToSet(Unif),#SemanticCastToList(Stack)))),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(9), contentStartLine(238), org.kframework.attributes.Location(Location(238,9,244,18)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<states>`(#noDots(.KList),`_List_`(`ListItem`(state(`_;__LOGIC-SYNTAX`(#token("dup","SingleInstr"),#SemanticCastToInstr(Is)),#SemanticCastToSet(Unif),`_List_`(`ListItem`(#SemanticCastToKItem(A)),#SemanticCastToList(Stack)))),#SemanticCastToList(States))=>`_List_`(#SemanticCastToList(States),`ListItem`(state(#SemanticCastToInstr(Is),#SemanticCastToSet(Unif),`_List_`(`_List_`(`ListItem`(#SemanticCastToKItem(A)),`ListItem`(#SemanticCastToKItem(A))),#SemanticCastToList(Stack))))),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(9), contentStartLine(247), org.kframework.attributes.Location(Location(247,9,253,18)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<states>`(#noDots(.KList),`_List_`(`ListItem`(state(`_;__LOGIC-SYNTAX`(#token("dif","SingleInstr"),#SemanticCastToInstr(Is)),#SemanticCastToSet(Unif),`_List_`(`_List_`(`ListItem`(#SemanticCastToKItem(A)),`ListItem`(#SemanticCastToKItem(B))),#SemanticCastToList(Stack)))),#SemanticCastToList(States))=>`_List_`(#SemanticCastToList(States),`ListItem`(runUnif(#SemanticCastToInstr(Is),`_Set_`(`SetItem`(`_~=__LOGIC`(#SemanticCastToKItem(A),#SemanticCastToKItem(B))),#SemanticCastToSet(Unif)),#SemanticCastToList(Stack)))),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(9), contentStartLine(229), org.kframework.attributes.Location(Location(229,9,235,18)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<states>`(#noDots(.KList),`_List_`(`ListItem`(checkUnif(#SemanticCastToInstr(Is),#SemanticCastToSet(Unif),#SemanticCastToList(Stack))),#SemanticCastToList(States))=>`_List_`(#SemanticCastToList(States),`ListItem`(state(#SemanticCastToInstr(Is),#SemanticCastToSet(Unif),#SemanticCastToList(Stack)))),#noDots(.KList)) requires unifPossible(#SemanticCastToSet(Unif)) ensures #token("true","Bool") [contentStartColumn(9), contentStartLine(136), org.kframework.attributes.Location(Location(136,9,143,36)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  rule `<states>`(#noDots(.KList),`ListItem`(runUnif(#SemanticCastToInstr(Is),#SemanticCastToSet(Unif),#SemanticCastToList(Stack))=>checkUnif(#SemanticCastToInstr(Is),performUnif(sortUnif(#SemanticCastToSet(Unif))),#SemanticCastToList(Stack))),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(9), contentStartLine(130), org.kframework.attributes.Location(Location(130,9,133,18)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `<states>`(#noDots(.KList),`ListItem`(checkUnif(#SemanticCastToInstr(Is),#SemanticCastToSet(Unif),#SemanticCastToList(Stack)))=>`.List`(.KList),#dots(.KList)) requires `notBool_`(unifPossible(#SemanticCastToSet(Unif))) ensures #token("true","Bool") [contentStartColumn(9), contentStartLine(142), org.kframework.attributes.Location(Location(142,9,146,45)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`___LOGIC-SYNTAX`(`block_start_end_LOGIC-SYNTAX`(#SemanticCastToLabel(B),#SemanticCastToInstr(Is)),#SemanticCastToProgram(Bs))=>#SemanticCastToProgram(Bs),#noDots(.KList)),`<blocks>`(#dots(.KList),`.Map`(.KList)=>`_|->_`(#SemanticCastToLabel(B),#SemanticCastToInstr(Is)),#dots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(9), contentStartLine(157), org.kframework.attributes.Location(Location(157,9,169,18)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<k>`(#noDots(.KList),`.List{"___LOGIC-SYNTAX"}`(.KList)=>.K,#noDots(.KList)),`<states>`(#noDots(.KList),`.List`(.KList)=>`ListItem`(state(`_;__LOGIC-SYNTAX`(`goto__LOGIC-SYNTAX`(#token("main","Label")),`.List{"_;__LOGIC-SYNTAX"}`(.KList)),`.Set`(.KList),`.List`(.KList))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(9), contentStartLine(149), org.kframework.attributes.Location(Location(149,9,154,18)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<blocks>`(#dots(.KList),`_|->_`(#SemanticCastToLabel(L),#SemanticCastToInstr(B)),#dots(.KList)),`<states>`(#noDots(.KList),`_List_`(`ListItem`(state(`_;__LOGIC-SYNTAX`(`goto__LOGIC-SYNTAX`(#SemanticCastToLabel(L)),`.List{"_;__LOGIC-SYNTAX"}`(.KList)),#SemanticCastToSet(Unif),#SemanticCastToList(Stack))),#SemanticCastToList(Ss))=>`_List_`(#SemanticCastToList(Ss),`ListItem`(state(#SemanticCastToInstr(B),#SemanticCastToSet(Unif),#SemanticCastToList(Stack)))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(9), contentStartLine(172), org.kframework.attributes.Location(Location(172,9,183,18)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule #cells(`<blocks>`(#dots(.KList),`_Map_`(`_|->_`(#SemanticCastToLabel(L1),#SemanticCastToInstr(B1)),`_|->_`(#SemanticCastToLabel(L2),#SemanticCastToInstr(B2))),#dots(.KList)),`<states>`(#noDots(.KList),`_List_`(`ListItem`(state(`_;__LOGIC-SYNTAX`(`branch___LOGIC-SYNTAX`(#SemanticCastToLabel(L1),#SemanticCastToLabel(L2)),`.List{"_;__LOGIC-SYNTAX"}`(.KList)),#SemanticCastToSet(Unif),#SemanticCastToList(Stack))),#SemanticCastToList(States))=>`_List_`(`_List_`(#SemanticCastToList(States),`ListItem`(state(#SemanticCastToInstr(B1),#SemanticCastToSet(Unif),#SemanticCastToList(Stack)))),`ListItem`(state(#SemanticCastToInstr(B2),#SemanticCastToSet(Unif),#SemanticCastToList(Stack)))),#noDots(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(9), contentStartLine(186), org.kframework.attributes.Location(Location(186,9,199,18)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module LOGIC$SYNTAX [org.kframework.attributes.Location(Location(24,1,266,9)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k))]
  imports SUBSTITUTION$SYNTAX
  imports MAP$SYNTAX
  imports LOGIC-SYNTAX$SYNTAX
  imports DOMAINS$SYNTAX
  syntax StatesCellOpt ::= StatesCell
  syntax StatesCellOpt ::= "noStatesCell" [cellOptAbsent(StatesCell)]
  syntax StatesCell ::= "initStatesCell" [function, initializer, noThread]
  syntax StatesCell ::= "<states>" List "</states>" [cell, cellName(states), contentStartColumn(9), contentStartLine(33), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax State ::= "state" "(" Instr "," Set "," List ")" [klabel(state)]
  syntax State ::= "runUnif" "(" Instr "," Set "," List ")" [klabel(runUnif)]
  syntax State ::= "checkUnif" "(" Instr "," Set "," List ")" [klabel(checkUnif)]
  syntax Set ::= "vars" "(" KItem ")" [function, klabel(vars)]
  syntax Set ::= "sortUnif" "(" Set ")" [function, klabel(sortUnif)]
  syntax Set ::= "performUnif" "(" Set ")" [function, klabel(performUnif)]
  syntax KVar ::= Id
  syntax KItem ::= KItem "~=" KItem
  syntax KItem ::= KItem "=" KItem
  syntax KItem ::= Func
  syntax KCellOpt ::= KCell
  syntax KCellOpt ::= "noKCell" [cellOptAbsent(KCell)]
  syntax KCell ::= "initKCell" "(" Map ")" [function, initializer, noThread]
  syntax KCell ::= "<k>" K "</k>" [cell, cellName(k), contentStartColumn(9), contentStartLine(33), format(%1%i%n%2%d%n%3), maincell, org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  syntax GeneratedTopCellFragment ::= "<generatedTop>-fragment" KCellOpt BlocksCellOpt StatesCellOpt "</generatedTop>-fragment" [cellFragment(GeneratedTopCell)]
  syntax GeneratedTopCell ::= "initGeneratedTopCell" "(" Map ")" [function, initializer, noThread]
  syntax GeneratedTopCell ::= "<generatedTop>" KCell BlocksCell StatesCell "</generatedTop>" [cell, cellName(generatedTop), contentStartColumn(9), contentStartLine(33), format(%1%i%n%2%n%3%n%4%d%n%5), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), topcell]
  syntax Func ::= "func" "(" String "," List ")" [klabel(func)]
  syntax Bool ::= "unifPossible" "(" Set ")" [function, klabel(unifPossible)]
  syntax Bool ::= "unifDone" "(" Set ")" [function, klabel(unifDone)]
  syntax Bool ::= "sameFuncName" "(" KItem "," KItem ")" [function, klabel(sameFuncName)]
  syntax Bool ::= "isLt" "(" KItem "," KItem ")" [function, klabel(isLt)]
  syntax Bool ::= "isFunc" "(" KItem ")" [function, klabel(isFunc)]
  syntax Bool ::= "checkDone" "(" KItem "," Set ")" [function, klabel(checkDone)]
  syntax Bool ::= "canUnify" "(" KItem "," Set ")" [function, klabel(canUnify)]
  syntax BlocksCellOpt ::= BlocksCell
  syntax BlocksCellOpt ::= "noBlocksCell" [cellOptAbsent(BlocksCell)]
  syntax BlocksCell ::= "initBlocksCell" [function, initializer, noThread]
  syntax BlocksCell ::= "<blocks>" Map "</blocks>" [cell, cellName(blocks), contentStartColumn(9), contentStartLine(33), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  Bubble(config,<k> $PGM:Program </k>
        <blocks> .Map </blocks>
        <states> .List </states>,[contentStartColumn(9), contentStartLine(33), org.kframework.attributes.Location(Location(32,5,35,32)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k))])
endmodule


module LOGIC-SYNTAX [org.kframework.attributes.Location(Location(3,1,22,9)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k))]
  imports LOGIC-SYNTAX$SYNTAX
  imports DOMAINS-SYNTAX
endmodule


module LOGIC-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(3,1,22,9)), org.kframework.attributes.Source(Source(/home/roei/K/logic/./logic.k))]
  imports DOMAINS-SYNTAX$SYNTAX
  syntax SingleInstr ::= "var" Id
  syntax SingleInstr ::= "unify" [token]
  syntax SingleInstr ::= "rot" [token]
  syntax SingleInstr ::= "pop" [token]
  syntax SingleInstr ::= "int" Int
  syntax SingleInstr ::= "goto" Label
  syntax SingleInstr ::= "functor" String Int
  syntax SingleInstr ::= "dup" [token]
  syntax SingleInstr ::= "dif" [token]
  syntax SingleInstr ::= "branch" Label Label
  syntax Program ::= Block "" Program [right, userList(*)]
  syntax Program ::= ".Program" [klabel(.List{"___LOGIC-SYNTAX"}), userList(*)]
  syntax Label ::= Id
  syntax Label ::= "main" [token]
  syntax Instr ::= SingleInstr ";" Instr [right, userList(*)]
  syntax Instr ::= ".Instr" [klabel(.List{"_;__LOGIC-SYNTAX"}), userList(*)]
  syntax Block ::= "block" Label "start" Instr "end"
endmodule


module MAP [org.kframework.attributes.Location(Location(93,1,159,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports SET
  imports MAP$SYNTAX
  imports LIST
  imports INT-SYNTAX
  imports BOOL-SYNTAX
endmodule


module MAP$SYNTAX [org.kframework.attributes.Location(Location(93,1,159,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports SET$SYNTAX
  imports LIST$SYNTAX
  imports INT-SYNTAX$SYNTAX
  imports BOOL-SYNTAX$SYNTAX
  syntax priority _|->_ > .Map _Map_
  syntax associativity non-assoc _|->_
  syntax associativity left _Map_
  syntax Set ::= "keys" "(" Map ")" [function, functional, hook(MAP.keys), klabel(keys)]
  syntax Map [hook(MAP.Map), org.kframework.attributes.Location(Location(99,3,99,28)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  syntax Map ::= Map Map [assoc, comm, element(_|->_), format(%1%n%2), function, hook(MAP.concat), index(0), klabel(_Map_), left, symbol, unit(.Map)]
  syntax Map ::= Map "[" KItem "<-" KItem "]" [function, functional, hook(MAP.update), klabel(Map:update), prefer, symbol]
  syntax Map ::= Map "[" KItem "<-" "undef" "]" [function, functional, hook(MAP.remove), klabel(_[_<-undef]), symbol]
  syntax Map ::= Map "-Map" Map [function, functional, hook(MAP.difference), latex({#1}-_{\it Map}{#2})]
  syntax Map ::= KItem "|->" KItem [function, functional, hook(MAP.element), klabel(_|->_), latex({#1}\mapsto{#2}), symbol]
  syntax Map ::= "updateMap" "(" Map "," Map ")" [function, functional, hook(MAP.updateAll), klabel(updateMap)]
  syntax Map ::= "removeAll" "(" Map "," Set ")" [function, functional, hook(MAP.removeAll), klabel(removeAll)]
  syntax Map ::= ".Map" [function, functional, hook(MAP.unit), klabel(.Map), latex(\dotCt{Map}), symbol]
  syntax List ::= "values" "(" Map ")" [function, hook(MAP.values), klabel(values)]
  syntax List ::= "keys_list" "(" Map ")" [function, hook(MAP.keys_list)]
  syntax KItem ::= Map "[" KItem "]" [function, hook(MAP.lookup), klabel(Map:lookup), symbol]
  syntax KItem ::= Map "[" KItem "]" "orDefault" KItem [function, functional, hook(MAP.lookupOrDefault), klabel(Map:lookupOrDefault)]
  syntax KItem ::= "choice" "(" Map ")" [function, hook(MAP.choice), klabel(Map:choice)]
  syntax Int ::= "size" "(" Map ")" [function, functional, hook(MAP.size), klabel(sizeMap)]
  syntax Bool ::= Map "<=Map" Map [function, functional, hook(MAP.inclusion)]
  syntax Bool ::= KItem "in_keys" "(" Map ")" [function, functional, hook(MAP.in_keys)]
endmodule


module MAP-SYMBOLIC$SYNTAX [org.kframework.attributes.Location(Location(161,1,185,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), symbolic]
  imports MAP$SYNTAX
  imports K-EQUAL$SYNTAX
endmodule


module MINT$SYNTAX [org.kframework.attributes.Location(Location(1286,1,1405,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports MINT-SYNTAX$SYNTAX
  imports INT$SYNTAX
  syntax {Width} MInt{Width} ::= MInt{Width} "|MInt" MInt{Width} [function, functional, hook(MINT.or), smt-hook(bvor)]
  syntax {Width} MInt{Width} ::= MInt{Width} "xorMInt" MInt{Width} [function, functional, hook(MINT.xor), smt-hook(bvxor)]
  syntax {Width} MInt{Width} ::= MInt{Width} ">>lMInt" MInt{Width} [function, hook(MINT.lshr), smt-hook(bvlshr)]
  syntax {Width} MInt{Width} ::= MInt{Width} ">>aMInt" MInt{Width} [function, hook(MINT.ashr), smt-hook(bvashr)]
  syntax {Width} MInt{Width} ::= MInt{Width} "<<MInt" MInt{Width} [function, hook(MINT.shl), smt-hook(bvshl)]
  syntax {Width} MInt{Width} ::= MInt{Width} "/uMInt" MInt{Width} [function, hook(MINT.udiv), smt-hook(bvudiv)]
  syntax {Width} MInt{Width} ::= MInt{Width} "/sMInt" MInt{Width} [function, hook(MINT.sdiv), smt-hook(bvsdiv)]
  syntax {Width} MInt{Width} ::= MInt{Width} "-MInt" MInt{Width} [function, functional, hook(MINT.sub), smt-hook(bvsub)]
  syntax {Width} MInt{Width} ::= MInt{Width} "+MInt" MInt{Width} [function, functional, hook(MINT.add), smt-hook(bvadd)]
  syntax {Width} MInt{Width} ::= MInt{Width} "*MInt" MInt{Width} [function, functional, hook(MINT.mul), smt-hook(bvmul)]
  syntax {Width} MInt{Width} ::= MInt{Width} "&MInt" MInt{Width} [function, functional, hook(MINT.and), smt-hook(bvand)]
  syntax {Width} MInt{Width} ::= MInt{Width} "%uMInt" MInt{Width} [function, hook(MINT.urem), smt-hook(bvurem)]
  syntax {Width} MInt{Width} ::= MInt{Width} "%sMInt" MInt{Width} [function, hook(MINT.srem), smt-hook(bvsrem)]
  syntax {Width} MInt{Width} ::= "~MInt" MInt{Width} [function, functional, hook(MINT.not), smt-hook(bvnot)]
  syntax {Width} MInt{Width} ::= "uMinMInt" "(" MInt{Width} "," MInt{Width} ")" [function, functional, hook(MINT.umin), klabel(uMinMInt), smt-hook((ite (bvult #1 #2) #1 #2))]
  syntax {Width} MInt{Width} ::= "uMaxMInt" "(" MInt{Width} "," MInt{Width} ")" [function, functional, hook(MINT.umax), klabel(uMaxMInt), smt-hook((ite (bvult #1 #2) #2 #1))]
  syntax {Width} MInt{Width} ::= "sMinMInt" "(" MInt{Width} "," MInt{Width} ")" [function, functional, hook(MINT.smin), klabel(sMinMInt), smt-hook((ite (bvslt #1 #2) #1 #2))]
  syntax {Width} MInt{Width} ::= "sMaxMInt" "(" MInt{Width} "," MInt{Width} ")" [function, functional, hook(MINT.smax), klabel(sMaxMInt), smt-hook((ite (bvslt #1 #2) #2 #1))]
  syntax {Width} MInt{Width} ::= "Int2MInt" "(" Int ")" [function, functional, hook(MINT.integer), klabel(Int2MInt), smt-hook(int2bv)]
  syntax {Width} MInt{Width} ::= "--MInt" MInt{Width} [function, functional, hook(MINT.neg), smt-hook(bvuminus)]
  syntax {Width} Int ::= "bitwidthMInt" "(" MInt{Width} ")" [function, functional, hook(MINT.bitwidth), klabel(bitwidthMInt)]
  syntax {Width} Int ::= "MInt2Unsigned" "(" MInt{Width} ")" [function, functional, hook(MINT.uvalue), klabel(MInt2Unsigned), smt-hook(bv2int)]
  syntax {Width} Int ::= "MInt2Signed" "(" MInt{Width} ")" [function, functional, hook(MINT.svalue), klabel(MInt2Signed)]
  syntax {Width} Bool ::= MInt{Width} ">uMInt" MInt{Width} [function, functional, hook(MINT.ugt), smt-hook(bvugt)]
  syntax {Width} Bool ::= MInt{Width} ">sMInt" MInt{Width} [function, functional, hook(MINT.sgt), smt-hook(bvsgt)]
  syntax {Width} Bool ::= MInt{Width} ">=uMInt" MInt{Width} [function, functional, hook(MINT.uge), smt-hook(bvuge)]
  syntax {Width} Bool ::= MInt{Width} ">=sMInt" MInt{Width} [function, functional, hook(MINT.sge), smt-hook(bvsge)]
  syntax {Width} Bool ::= MInt{Width} "==MInt" MInt{Width} [function, functional, hook(MINT.eq), smt-hook(=)]
  syntax {Width} Bool ::= MInt{Width} "=/=MInt" MInt{Width} [function, functional, hook(MINT.ne), smt-hook(distinct)]
  syntax {Width} Bool ::= MInt{Width} "<uMInt" MInt{Width} [function, functional, hook(MINT.ult), smt-hook(bvult)]
  syntax {Width} Bool ::= MInt{Width} "<sMInt" MInt{Width} [function, functional, hook(MINT.slt), smt-hook(bvslt)]
  syntax {Width} Bool ::= MInt{Width} "<=uMInt" MInt{Width} [function, functional, hook(MINT.ule), smt-hook(bvule)]
  syntax {Width} Bool ::= MInt{Width} "<=sMInt" MInt{Width} [function, functional, hook(MINT.sle), smt-hook(bvsle)]
  syntax {Width1, Width2} MInt{Width1} ::= "roundMInt" "(" MInt{Width2} ")" [function, functional, hook(MINT.round), klabel(roundMInt)]
  syntax priority --MInt__MINT ~MInt__MINT > _%uMInt__MINT _/uMInt__MINT _%sMInt__MINT _*MInt__MINT _/sMInt__MINT > _-MInt__MINT _+MInt__MINT > _>>lMInt__MINT _<<MInt__MINT _>>aMInt__MINT > _&MInt__MINT > _xorMInt__MINT > _|MInt__MINT
  syntax associativity left _|MInt__MINT
  syntax associativity left _xorMInt__MINT
  syntax associativity left _>>lMInt__MINT _<<MInt__MINT _>>aMInt__MINT
  syntax associativity left _-MInt__MINT _+MInt__MINT
  syntax associativity left _&MInt__MINT
  syntax associativity left _%uMInt__MINT _/uMInt__MINT _%sMInt__MINT _*MInt__MINT _/sMInt__MINT
  syntax Int ::= "uminMInt" "(" Int ")" [function, klabel(uminMInt)]
  syntax Int ::= "umaxMInt" "(" Int ")" [function, klabel(umaxMInt)]
  syntax Int ::= "sminMInt" "(" Int ")" [function, klabel(sminMInt)]
  syntax Int ::= "smaxMInt" "(" Int ")" [function, klabel(smaxMInt)]
  syntax Bool ::= "uoverflowMInt" "(" Int "," Int ")" [function, klabel(uoverflowMInt)]
  syntax Bool ::= "soverflowMInt" "(" Int "," Int ")" [function, klabel(soverflowMInt)]
endmodule


module MINT-SYNTAX [org.kframework.attributes.Location(Location(1277,1,1284,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports MINT-SYNTAX$SYNTAX
endmodule


module MINT-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(1277,1,1284,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  syntax {Width} MInt{Width} ::= r"[\\+-]?[0-9]+[pP][0-9]+" [hook(MINT.literal), prec(2), token]
  syntax MInt{Width} [hook(MINT.MInt), org.kframework.attributes.Location(Location(1280,3,1280,46)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
endmodule


module ML-SYNTAX [org.kframework.attributes.Location(Location(65,1,89,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports SORT-K
  imports ML-SYNTAX$SYNTAX
endmodule


module ML-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(65,1,89,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports SORT-K$SYNTAX
  syntax {Sort} Sort ::= Sort "#Or" Sort [assoc, comm, format(%i%1%d%n%2%n%i%3%d), klabel(#Or), left, mlOp, symbol, unit(#False)]
  syntax {Sort} Sort ::= Sort "#Implies" Sort [format(%i%1%d%n%2%n%i%3%d), klabel(#Implies), mlImplies, mlOp, symbol]
  syntax {Sort} Sort ::= Sort "#And" Sort [assoc, comm, format(%i%1%d%n%2%n%i%3%d), klabel(#And), left, mlAnd, mlOp, symbol, unit(#True)]
  syntax {Sort} Sort ::= "#wEF" "(" Sort ")" [klabel(weakExistsFinally), mlOp, mlQuantifier, symbol]
  syntax {Sort} Sort ::= "#True" [klabel(#True), mlUnary, symbol]
  syntax {Sort} Sort ::= "#Not" "(" Sort ")" [klabel(#Not), mlOp, mlUnary, symbol]
  syntax {Sort} Sort ::= "#False" [klabel(#False), mlUnary, symbol]
  syntax {Sort} Sort ::= "#AG" "(" Sort ")" [klabel(#AG), mlOp, mlQuantifier, symbol]
  syntax {Sort1, Sort2} Sort2 ::= "{" Sort1 "#Equals" Sort1 "}" [format(%1%i%n%2%d%n%3%i%n%4%d%n%5), klabel(#Equals), mlEquals, mlOp, symbol]
  syntax {Sort1, Sort2} Sort2 ::= "#Forall" Sort1 "." Sort2 [klabel(#Forall), mlBinder, mlOp, mlQuantifier, symbol]
  syntax {Sort1, Sort2} Sort2 ::= "#Floor" "(" Sort1 ")" [klabel(#Floor), mlOp, mlUnary, symbol]
  syntax {Sort1, Sort2} Sort2 ::= "#Exists" Sort1 "." Sort2 [klabel(#Exists), mlBinder, mlOp, mlQuantifier, symbol]
  syntax {Sort1, Sort2} Sort2 ::= "#Ceil" "(" Sort1 ")" [klabel(#Ceil), mlOp, mlUnary, symbol]
  syntax priority #True #Floor #Ceil #Not #False > #Equals > #And
  syntax priority #Implies > #Exists #Forall #AG weakExistsFinally
  syntax priority #And > #Or > #Implies
  syntax associativity left #Or
  syntax associativity left #And
endmodule


module PROGRAM-LISTS [org.kframework.attributes.Location(Location(206,1,218,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports SORT-K
  imports PROGRAM-LISTS$SYNTAX
endmodule


module PROGRAM-LISTS$SYNTAX [org.kframework.attributes.Location(Location(206,1,218,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports SORT-K$SYNTAX
endmodule


module RECORD-PRODUCTIONS [org.kframework.attributes.Location(Location(239,1,244,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports RECORD-PRODUCTIONS$SYNTAX
endmodule


module RECORD-PRODUCTIONS$SYNTAX [org.kframework.attributes.Location(Location(239,1,244,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
endmodule


module REQUIRES-ENSURES [org.kframework.attributes.Location(Location(153,1,164,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports REQUIRES-ENSURES$SYNTAX
  imports BASIC-K
endmodule


module REQUIRES-ENSURES$SYNTAX [org.kframework.attributes.Location(Location(153,1,164,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports BASIC-K$SYNTAX
  syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]
  syntax #RuleContent ::= #RuleBody "when" K [klabel(#ruleRequires), symbol]
  syntax #RuleContent ::= #RuleBody "when" K "ensures" K [klabel(#ruleRequiresEnsures), symbol]
  syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]
  syntax #RuleContent ::= #RuleBody "requires" K "ensures" K [klabel(#ruleRequiresEnsures), symbol]
  syntax #RuleContent ::= #RuleBody "ensures" K [klabel(#ruleEnsures), symbol]
  syntax #RuleBody ::= K
endmodule


module RULE-CELLS [org.kframework.attributes.Location(Location(124,1,134,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports RULE-LISTS
  imports RULE-CELLS$SYNTAX
  imports KCELLS
endmodule


module RULE-CELLS$SYNTAX [org.kframework.attributes.Location(Location(124,1,134,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports RULE-LISTS$SYNTAX
  imports KCELLS$SYNTAX
  syntax #OptionalDots ::= "..." [klabel(#dots), symbol]
  syntax #OptionalDots ::= "" [klabel(#noDots), symbol]
endmodule


module RULE-LISTS [org.kframework.attributes.Location(Location(220,1,225,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports RULE-LISTS$SYNTAX
endmodule


module RULE-LISTS$SYNTAX [org.kframework.attributes.Location(Location(220,1,225,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
endmodule


module RULE-TAG-SYNTAX [org.kframework.attributes.Location(Location(1425,1,1429,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports RULE-TAG-SYNTAX$SYNTAX
  imports BUILTIN-ID-TOKENS
endmodule


module RULE-TAG-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(1425,1,1429,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports BUILTIN-ID-TOKENS$SYNTAX
  syntax #RuleTag ::= #LowerId [token]
endmodule


module SET [org.kframework.attributes.Location(Location(187,1,223,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports SET$SYNTAX
  imports INT-SYNTAX
  imports BASIC-K
endmodule


module SET$SYNTAX [org.kframework.attributes.Location(Location(187,1,223,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports INT-SYNTAX$SYNTAX
  imports BASIC-K$SYNTAX
  syntax associativity left _Set_
  syntax Set [hook(SET.Set), org.kframework.attributes.Location(Location(191,3,191,28)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  syntax Set ::= Set Set [assoc, comm, element(SetItem), format(%1%n%2), function, functional, hook(SET.concat), idem, klabel(_Set_), left, symbol, unit(.Set)]
  syntax Set ::= Set "-Set" Set [function, functional, hook(SET.difference), klabel(Set:difference), latex({#1}-_{\it Set}{#2}), symbol]
  syntax Set ::= "intersectSet" "(" Set "," Set ")" [function, functional, hook(SET.intersection), klabel(intersectSet)]
  syntax Set ::= "SetItem" "(" KItem ")" [function, functional, hook(SET.element), klabel(SetItem), symbol]
  syntax Set ::= ".Set" [function, functional, hook(SET.unit), klabel(.Set), latex(\dotCt{Set}), symbol]
  syntax KItem ::= "choice" "(" Set ")" [function, hook(SET.choice), klabel(Set:choice)]
  syntax Int ::= "size" "(" Set ")" [function, functional, hook(SET.size), klabel(size)]
  syntax Bool ::= Set "<=Set" Set [function, functional, hook(SET.inclusion)]
  syntax Bool ::= KItem "in" Set [function, functional, hook(SET.in), klabel(Set:in), symbol]
endmodule


module SORT-K [org.kframework.attributes.Location(Location(4,1,6,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports SORT-K$SYNTAX
endmodule


module SORT-K$SYNTAX [org.kframework.attributes.Location(Location(4,1,6,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  syntax K [hook(K.K), org.kframework.attributes.Location(Location(5,3,5,22)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
endmodule


module SORT-KBOTT [org.kframework.attributes.Location(Location(25,1,28,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports SORT-KBOTT$SYNTAX
  imports SORT-K
endmodule


module SORT-KBOTT$SYNTAX [org.kframework.attributes.Location(Location(25,1,28,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
  imports SORT-K$SYNTAX
  syntax KBott [org.kframework.attributes.Location(Location(27,3,27,14)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/kast.k))]
endmodule


module STDIN-STREAM [org.kframework.attributes.Location(Location(1111,1,1205,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports STDIN-STREAM$SYNTAX
  imports MAP
  imports K-REFLECTION
  imports K-IO
  syntax Cell ::= StdinCell
  rule initStdinCell(Init)=>`<stdin>`(#noDots(.KList),`_List_`(`_List_`(`ListItem`(#buffer(#SemanticCastToString(`project:String`(`Map:lookup`(Init,#token("$STDIN","KConfigVar")))))),`ListItem`(#SemanticCastToString(`project:String`(`Map:lookup`(Init,#token("$IO","KConfigVar")))))),`ListItem`(#istream(`#stdin_K-IO`(.KList)))),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule `<stdin>`(#noDots(.KList),`_List_`(`_List_`(`_List_`(`ListItem`(#parseInput(#SemanticCastToString(_),#SemanticCastToString(Delimiters))),`ListItem`(#buffer(#SemanticCastToString(S)=>`_+String__STRING-COMMON`(#SemanticCastToString(S),chrChar(`project:Int`(`#getc(_)_K-IO`(#SemanticCastToInt(N)))))))),`ListItem`(#token("\"on\"","String"))),`ListItem`(#istream(#SemanticCastToInt(N)))),#noDots(.KList)) requires `_==Int_`(findChar(#SemanticCastToString(S),#SemanticCastToString(Delimiters),#token("0","Int")),#token("-1","Int")) ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(1122), label(STDIN-STREAM.stdinGetc), org.kframework.attributes.Location(Location(1122,8,1128,49)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), priority(200), stream]
  rule `<stdin>`(#noDots(.KList),`_List_`(`_List_`(`ListItem`(#parseInput(#token("\"String\"","String"),#SemanticCastToString(Delimiters)))=>`ListItem`(#SemanticCastToString(S)),`ListItem`(#buffer(#SemanticCastToString(S)=>#token("\"\"","String")))),#SemanticCastToList(_)),#noDots(.KList)) requires `_=/=Int_`(findChar(#SemanticCastToString(S),#SemanticCastToString(Delimiters),#token("0","Int")),#token("-1","Int")) ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(1133), label(STDIN-STREAM.stdinParseString), org.kframework.attributes.Location(Location(1133,8,1138,50)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), stream]
  rule `<stdin>`(#noDots(.KList),`_List_`(`_List_`(`ListItem`(#parseInput(#token("\"Int\"","String"),#SemanticCastToString(Delimiters)))=>`ListItem`(`String2Int`(substrString(#SemanticCastToString(S),#token("0","Int"),findChar(#SemanticCastToString(S),#SemanticCastToString(Delimiters),#token("0","Int"))))),`ListItem`(#buffer(#SemanticCastToString(S)=>substrString(#SemanticCastToString(S),`_+Int_`(findChar(#SemanticCastToString(S),#SemanticCastToString(Delimiters),#token("0","Int")),#token("1","Int")),lengthString(#SemanticCastToString(S)))))),#SemanticCastToList(_)),#noDots(.KList)) requires `_andBool_`(`_=/=Int_`(findChar(#SemanticCastToString(S),#SemanticCastToString(Delimiters),#token("0","Int")),#token("-1","Int")),`_>Int_`(lengthString(#SemanticCastToString(S)),#token("1","Int"))) ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(1143), label(STDIN-STREAM.stdinParseInt), org.kframework.attributes.Location(Location(1143,8,1150,38)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), stream]
  rule `<stdin>`(#noDots(.KList),`_List_`(`_List_`(`ListItem`(#parseInput(#SemanticCastToString(Sort),#SemanticCastToString(Delimiters)))=>`ListItem`(#parseKAST(substrString(#SemanticCastToString(S),#token("0","Int"),findChar(#SemanticCastToString(S),#SemanticCastToString(Delimiters),#token("0","Int"))))),`ListItem`(#buffer(#SemanticCastToString(S)=>substrString(#SemanticCastToString(S),`_+Int_`(findChar(#SemanticCastToString(S),#SemanticCastToString(Delimiters),#token("0","Int")),#token("1","Int")),lengthString(#SemanticCastToString(S)))))),#SemanticCastToList(_)),#noDots(.KList)) requires `_andBool_`(`_andBool_`(`_=/=Int_`(findChar(#SemanticCastToString(S),#SemanticCastToString(Delimiters),#token("0","Int")),#token("-1","Int")),`_==String__STRING-COMMON`(#SemanticCastToString(Sort),#token("\"K\"","String"))),`_>Int_`(lengthString(#SemanticCastToString(S)),#token("1","Int"))) ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(1154), label(STDIN-STREAM.stdinParseArbitrarySort), org.kframework.attributes.Location(Location(1154,8,1162,38)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), stream]
  rule `<stdin>`(#noDots(.KList),`_List_`(`_List_`(`ListItem`(#parseInput(#SemanticCastToString(Sort),#SemanticCastToString(Delimiters))),`ListItem`(#buffer(#SemanticCastToString(S)=>substrString(#SemanticCastToString(S),#token("1","Int"),lengthString(#SemanticCastToString(S)))))),#SemanticCastToList(_)),#noDots(.KList)) requires `_andBool_`(`_andBool_`(`_=/=Int_`(findChar(#SemanticCastToString(S),#SemanticCastToString(Delimiters),#token("0","Int")),#token("-1","Int")),`_=/=String__STRING-COMMON`(#SemanticCastToString(Sort),#token("\"String\"","String"))),`_<=Int_`(lengthString(#SemanticCastToString(S)),#token("1","Int"))) ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(1166), label(STDIN-STREAM.stdinTrim), org.kframework.attributes.Location(Location(1166,8,1173,39)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), stream]
  rule `<stdin>`(#noDots(.KList),`_List_`(`.List`(.KList)=>`ListItem`(#parseInput(#SemanticCastToString(?Sort),#SemanticCastToString(?Delimiters))),`ListItem`(#buffer(#SemanticCastToString(_)))),#dots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(1191), label(STDIN-STREAM.stdinUnblock), org.kframework.attributes.Location(Location(1191,8,1195,16)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), unblock]
endmodule


module STDIN-STREAM$SYNTAX [org.kframework.attributes.Location(Location(1111,1,1205,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports MAP$SYNTAX
  imports K-REFLECTION$SYNTAX
  imports K-IO$SYNTAX
  syntax Stream ::= "#parseInput" "(" String "," String ")" [klabel(#parseInput)]
  syntax Stream ::= "#istream" "(" Int ")" [klabel(#istream)]
  syntax StdinCell ::= "initStdinCell" "(" Map ")" [function, initializer, noThread]
  syntax StdinCell ::= "<stdin>" List "</stdin>" [cell, cellName(stdin), contentStartColumn(17), contentStartLine(1118), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), topcell]
  Bubble(config,<stdin> ListItem(#buffer($STDIN:String)) ListItem($IO:String) ListItem(#istream(#stdin)) </stdin>,[contentStartColumn(17), contentStartLine(1118), org.kframework.attributes.Location(Location(1118,3,1118,113)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))])
endmodule


module STDOUT-STREAM [org.kframework.attributes.Location(Location(1207,1,1275,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports STDOUT-STREAM$SYNTAX
  imports MAP
  imports K-IO
  syntax Cell ::= StdoutCell
  rule initStdoutCell(Init)=>`<stdout>`(#noDots(.KList),`_List_`(`_List_`(`ListItem`(#ostream(`#stdout_K-IO`(.KList))),`ListItem`(#SemanticCastToString(`project:String`(`Map:lookup`(Init,#token("$IO","KConfigVar")))))),`ListItem`(#buffer(#token("\"\"","String")))),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  rule `<stdout>`(#noDots(.KList),`_List_`(`_List_`(`_List_`(`_List_`(`ListItem`(#ostream(#SemanticCastToInt(_))),`ListItem`(#SemanticCastToKItem(_))),`ListItem`(#buffer(#SemanticCastToString(Buffer)=>`_+String__STRING-COMMON`(#SemanticCastToString(Buffer),`Int2String`(#SemanticCastToInt(I)))))),`ListItem`(#SemanticCastToInt(I))=>`.List`(.KList)),#SemanticCastToList(_)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(1226), label(STDOUT-STREAM.stdoutBufferInt), org.kframework.attributes.Location(Location(1226,8,1232,17)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), priority(25), stream]
  rule `<stdout>`(#noDots(.KList),`_List_`(`_List_`(`_List_`(`_List_`(`ListItem`(#ostream(#SemanticCastToInt(_))),`ListItem`(#SemanticCastToKItem(_))),`ListItem`(#buffer(#SemanticCastToString(Buffer)=>`_+String__STRING-COMMON`(#SemanticCastToString(Buffer),`Float2String`(#SemanticCastToFloat(F)))))),`ListItem`(#SemanticCastToFloat(F))=>`.List`(.KList)),#SemanticCastToList(_)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(1216), label(STDOUT-STREAM.stdoutBufferFloat), org.kframework.attributes.Location(Location(1216,8,1222,17)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), priority(25), stream]
  rule `<stdout>`(#noDots(.KList),`_List_`(`_List_`(`_List_`(`_List_`(`ListItem`(#ostream(#SemanticCastToInt(_))),`ListItem`(#SemanticCastToKItem(_))),`ListItem`(#buffer(#SemanticCastToString(Buffer)=>`_+String__STRING-COMMON`(#SemanticCastToString(Buffer),#SemanticCastToString(S))))),`ListItem`(#SemanticCastToString(S))=>`.List`(.KList)),#SemanticCastToList(_)),#noDots(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(1236), label(STDOUT-STREAM.stdoutBufferString), org.kframework.attributes.Location(Location(1236,8,1242,17)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), priority(25), stream]
  rule `<stdout>`(#noDots(.KList),`_List_`(`_List_`(`_List_`(`ListItem`(#ostream(#SemanticCastToInt(N)=>`project:Int`(`#write(_,_)_K-IO`(#SemanticCastToInt(N),#SemanticCastToString(S))~>#SemanticCastToInt(N)))),`ListItem`(#token("\"on\"","String"))),`ListItem`(#buffer(#SemanticCastToString(S)=>#token("\"\"","String")))),#SemanticCastToList(_)),#noDots(.KList)) requires `_=/=String__STRING-COMMON`(#SemanticCastToString(S),#token("\"\"","String")) ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(1248), label(STDOUT-STREAM.stdoutWrite), org.kframework.attributes.Location(Location(1248,8,1254,28)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol]), priority(30), stream]
endmodule


module STDOUT-STREAM$SYNTAX [org.kframework.attributes.Location(Location(1207,1,1275,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports MAP$SYNTAX
  imports K-IO$SYNTAX
  syntax Stream ::= "#ostream" "(" Int ")" [klabel(#ostream)]
  syntax StdoutCell ::= "initStdoutCell" "(" Map ")" [function, initializer, noThread]
  syntax StdoutCell ::= "<stdout>" List "</stdout>" [cell, cellName(stdout), contentStartColumn(17), contentStartLine(1212), format(%1%i%n%2%d%n%3), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), topcell]
  Bubble(config,<stdout> ListItem(#ostream(#stdout)) ListItem($IO:String) ListItem(#buffer("")) </stdout>,[contentStartColumn(17), contentStartLine(1212), org.kframework.attributes.Location(Location(1212,3,1212,105)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))])
endmodule


module STRING [org.kframework.attributes.Location(Location(680,1,684,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports STRING-KAST
  imports STRING-COMMON
  imports STRING$SYNTAX
endmodule


module STRING$SYNTAX [org.kframework.attributes.Location(Location(680,1,684,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports STRING-KORE$SYNTAX
  imports STRING-KAST$SYNTAX
  imports STRING-COMMON$SYNTAX
endmodule


module STRING-BUFFER$SYNTAX [org.kframework.attributes.Location(Location(710,1,713,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports STRING-BUFFER-IN-K$SYNTAX
endmodule


module STRING-BUFFER-IN-K$SYNTAX [org.kframework.attributes.Location(Location(686,1,698,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), symbolic]
  imports STRING$SYNTAX
  imports BASIC-K$SYNTAX
  syntax associativity left _+String__STRING-BUFFER-IN-K
  syntax StringBuffer ::= StringBuffer "+String" String [avoid, function, functional, left]
  syntax StringBuffer ::= String
  syntax StringBuffer ::= ".StringBuffer" [function, functional]
  syntax String ::= "StringBuffer2String" "(" StringBuffer ")" [function, functional, klabel(StringBuffer2String)]
endmodule


module STRING-COMMON [org.kframework.attributes.Location(Location(587,1,662,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports STRING-SYNTAX
  imports STRING-COMMON$SYNTAX
  imports K-EQUAL
  imports INT
  imports FLOAT-SYNTAX
  rule rfindChar(#SemanticCastToString(_),#token("\"\"","String"),#SemanticCastToInt(_))=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(641), org.kframework.attributes.Location(Location(641,8,641,33)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule rfindChar(#SemanticCastToString(S1),#SemanticCastToString(S2),#SemanticCastToInt(I))=>`maxInt(_,_)_INT-COMMON`(rfindString(#SemanticCastToString(S1),substrString(#SemanticCastToString(S2),#token("0","Int"),#token("1","Int")),#SemanticCastToInt(I)),rfindChar(#SemanticCastToString(S1),substrString(#SemanticCastToString(S2),#token("1","Int"),lengthString(#SemanticCastToString(S2))),#SemanticCastToInt(I))) requires `_=/=String__STRING-COMMON`(#SemanticCastToString(S2),#token("\"\"","String")) ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(640), org.kframework.attributes.Location(Location(640,8,640,182)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  rule findChar(#SemanticCastToString(_),#token("\"\"","String"),#SemanticCastToInt(_))=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(639), org.kframework.attributes.Location(Location(639,8,639,32)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule findChar(#SemanticCastToString(S1),#SemanticCastToString(S2),#SemanticCastToInt(I))=>`#if_#then_#else_#fi_K-EQUAL-SYNTAX`(`_==Int_`(findString(#SemanticCastToString(S1),substrString(#SemanticCastToString(S2),#token("0","Int"),#token("1","Int")),#SemanticCastToInt(I)),#token("-1","Int")),findChar(#SemanticCastToString(S1),substrString(#SemanticCastToString(S2),#token("1","Int"),lengthString(#SemanticCastToString(S2))),#SemanticCastToInt(I)),`#if_#then_#else_#fi_K-EQUAL-SYNTAX`(`_==Int_`(findChar(#SemanticCastToString(S1),substrString(#SemanticCastToString(S2),#token("1","Int"),lengthString(#SemanticCastToString(S2))),#SemanticCastToInt(I)),#token("-1","Int")),findString(#SemanticCastToString(S1),substrString(#SemanticCastToString(S2),#token("0","Int"),#token("1","Int")),#SemanticCastToInt(I)),`minInt(_,_)_INT-COMMON`(findString(#SemanticCastToString(S1),substrString(#SemanticCastToString(S2),#token("0","Int"),#token("1","Int")),#SemanticCastToInt(I)),findChar(#SemanticCastToString(S1),substrString(#SemanticCastToString(S2),#token("1","Int"),lengthString(#SemanticCastToString(S2))),#SemanticCastToInt(I))))) requires `_=/=String__STRING-COMMON`(#SemanticCastToString(S2),#token("\"\"","String")) ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(638), org.kframework.attributes.Location(Location(638,8,638,431)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  rule `replaceFirst(_,_,_)_STRING-COMMON`(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#SemanticCastToString(_))=>#SemanticCastToString(Source) requires `_<Int_`(findString(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(651), org.kframework.attributes.Location(Location(651,8,652,57)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  rule `replaceFirst(_,_,_)_STRING-COMMON`(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#SemanticCastToString(Replacement))=>`_+String__STRING-COMMON`(`_+String__STRING-COMMON`(substrString(#SemanticCastToString(Source),#token("0","Int"),findString(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#token("0","Int"))),#SemanticCastToString(Replacement)),substrString(#SemanticCastToString(Source),`_+Int_`(findString(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#token("0","Int")),lengthString(#SemanticCastToString(ToReplace))),lengthString(#SemanticCastToString(Source)))) requires `_>=Int_`(findString(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(648), org.kframework.attributes.Location(Location(648,8,650,66)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  rule `replaceAll(_,_,_)_STRING-COMMON`(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#SemanticCastToString(Replacement))=>`replace(_,_,_,_)_STRING-COMMON`(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#SemanticCastToString(Replacement),`countAllOccurrences(_,_)_STRING-COMMON`(#SemanticCastToString(Source),#SemanticCastToString(ToReplace))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(660), org.kframework.attributes.Location(Location(660,8,660,154)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `replace(_,_,_,_)_STRING-COMMON`(#SemanticCastToString(Source),#SemanticCastToString(_),#SemanticCastToString(_),#token("0","Int"))=>#SemanticCastToString(Source) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(659), org.kframework.attributes.Location(Location(659,8,659,49)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `replace(_,_,_,_)_STRING-COMMON`(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#SemanticCastToString(Replacement),#SemanticCastToInt(Count))=>`_+String__STRING-COMMON`(`_+String__STRING-COMMON`(substrString(#SemanticCastToString(Source),#token("0","Int"),findString(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#token("0","Int"))),#SemanticCastToString(Replacement)),`replace(_,_,_,_)_STRING-COMMON`(substrString(#SemanticCastToString(Source),`_+Int_`(findString(#SemanticCastToString(Source),#SemanticCastToString(ToReplace),#token("0","Int")),lengthString(#SemanticCastToString(ToReplace))),lengthString(#SemanticCastToString(Source))),#SemanticCastToString(ToReplace),#SemanticCastToString(Replacement),`_-Int_`(#SemanticCastToInt(Count),#token("1","Int")))) requires `_>Int_`(#SemanticCastToInt(Count),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(655), org.kframework.attributes.Location(Location(655,8,658,30)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  rule `countAllOccurrences(_,_)_STRING-COMMON`(#SemanticCastToString(Source),#SemanticCastToString(ToCount))=>`_+Int_`(#token("1","Int"),`countAllOccurrences(_,_)_STRING-COMMON`(substrString(#SemanticCastToString(Source),`_+Int_`(findString(#SemanticCastToString(Source),#SemanticCastToString(ToCount),#token("0","Int")),lengthString(#SemanticCastToString(ToCount))),lengthString(#SemanticCastToString(Source))),#SemanticCastToString(ToCount))) requires `_>=Int_`(findString(#SemanticCastToString(Source),#SemanticCastToString(ToCount),#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(645), org.kframework.attributes.Location(Location(645,8,646,60)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  rule `countAllOccurrences(_,_)_STRING-COMMON`(#SemanticCastToString(Source),#SemanticCastToString(ToCount))=>#token("0","Int") requires `_<Int_`(findString(#SemanticCastToString(Source),#SemanticCastToString(ToCount),#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(643), org.kframework.attributes.Location(Location(643,8,644,59)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires), symbol])]
  rule `_>String__STRING-COMMON`(#SemanticCastToString(S1),#SemanticCastToString(S2))=>`_<String__STRING-COMMON`(#SemanticCastToString(S2),#SemanticCastToString(S1)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(635), org.kframework.attributes.Location(Location(635,8,635,52)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_>=String__STRING-COMMON`(#SemanticCastToString(S1),#SemanticCastToString(S2))=>`notBool_`(`_<String__STRING-COMMON`(#SemanticCastToString(S1),#SemanticCastToString(S2))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(636), org.kframework.attributes.Location(Location(636,8,636,63)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_=/=String__STRING-COMMON`(#SemanticCastToString(S1),#SemanticCastToString(S2))=>`notBool_`(`_==String__STRING-COMMON`(#SemanticCastToString(S1),#SemanticCastToString(S2))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(622), org.kframework.attributes.Location(Location(622,8,622,65)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  rule `_<=String__STRING-COMMON`(#SemanticCastToString(S1),#SemanticCastToString(S2))=>`notBool_`(`_<String__STRING-COMMON`(#SemanticCastToString(S2),#SemanticCastToString(S1))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(634), org.kframework.attributes.Location(Location(634,8,634,63)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module STRING-COMMON$SYNTAX [org.kframework.attributes.Location(Location(587,1,662,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports STRING-SYNTAX$SYNTAX
  imports K-EQUAL$SYNTAX
  imports INT$SYNTAX
  imports FLOAT-SYNTAX$SYNTAX
  syntax associativity left _==String__STRING-COMMON
  syntax associativity left _=/=String__STRING-COMMON
  syntax associativity left _+String__STRING-COMMON
  syntax String ::= String "+String" String [function, functional, hook(STRING.concat), latex({#1}+_{\scriptstyle\it String}{#2}), left]
  syntax String ::= "substrString" "(" String "," Int "," Int ")" [function, functional, hook(STRING.substr), klabel(substrString)]
  syntax String ::= "replaceFirst" "(" String "," String "," String ")" [function, functional, hook(STRING.replaceFirst)]
  syntax String ::= "replaceAll" "(" String "," String "," String ")" [function, functional, hook(STRING.replaceAll)]
  syntax String ::= "replace" "(" String "," String "," String "," Int ")" [function, hook(STRING.replace)]
  syntax String ::= "newUUID" [function, hook(STRING.uuid), impure]
  syntax String ::= "directionalityChar" "(" String ")" [function, hook(STRING.directionality), klabel(directionalityChar)]
  syntax String ::= "chrChar" "(" Int ")" [function, hook(STRING.chr), klabel(chrChar)]
  syntax String ::= "categoryChar" "(" String ")" [function, hook(STRING.category), klabel(categoryChar)]
  syntax String ::= "Int2String" "(" Int ")" [function, functional, hook(STRING.int2string), klabel(Int2String)]
  syntax String ::= "Float2String" "(" Float "," String ")" [function, hook(STRING.floatFormat), klabel(FloatFormat)]
  syntax String ::= "Float2String" "(" Float ")" [function, functional, hook(STRING.float2string), klabel(Float2String)]
  syntax String ::= "Base2String" "(" Int "," Int ")" [function, hook(STRING.base2string), klabel(Base2String)]
  syntax Int ::= "rfindString" "(" String "," String "," Int ")" [function, hook(STRING.rfind), klabel(rfindString)]
  syntax Int ::= "rfindChar" "(" String "," String "," Int ")" [function, hook(STRING.rfindChar), klabel(rfindChar)]
  syntax Int ::= "ordChar" "(" String ")" [function, hook(STRING.ord), klabel(ordChar)]
  syntax Int ::= "lengthString" "(" String ")" [function, functional, hook(STRING.length), klabel(lengthString)]
  syntax Int ::= "findString" "(" String "," String "," Int ")" [function, hook(STRING.find), klabel(findString)]
  syntax Int ::= "findChar" "(" String "," String "," Int ")" [function, hook(STRING.findChar), klabel(findChar)]
  syntax Int ::= "countAllOccurrences" "(" String "," String ")" [function, functional, hook(STRING.countAllOccurrences)]
  syntax Int ::= "String2Int" "(" String ")" [function, hook(STRING.string2int), klabel(String2Int)]
  syntax Int ::= "String2Base" "(" String "," Int ")" [function, hook(STRING.string2base), klabel(String2Base)]
  syntax Float ::= "String2Float" "(" String ")" [function, hook(STRING.string2float), klabel(String2Float)]
  syntax Bool ::= String ">String" String [function, functional, hook(STRING.gt)]
  syntax Bool ::= String ">=String" String [function, functional, hook(STRING.ge)]
  syntax Bool ::= String "==String" String [function, functional, hook(STRING.eq), left]
  syntax Bool ::= String "=/=String" String [function, functional, hook(STRING.ne), left]
  syntax Bool ::= String "<String" String [function, functional, hook(STRING.lt)]
  syntax Bool ::= String "<=String" String [function, functional, hook(STRING.le)]
endmodule


module STRING-KAST [kast, org.kframework.attributes.Location(Location(664,1,670,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports STRING-KAST$SYNTAX
  imports STRING-COMMON
  imports K-EQUAL
  rule `_==String__STRING-COMMON`(#SemanticCastToString(S1),#SemanticCastToString(S2))=>`_==K_`(#SemanticCastToString(S1),#SemanticCastToString(S2)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8), contentStartLine(668), org.kframework.attributes.Location(Location(668,8,668,49)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
endmodule


module STRING-KAST$SYNTAX [kast, org.kframework.attributes.Location(Location(664,1,670,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports STRING-COMMON$SYNTAX
  imports K-EQUAL$SYNTAX
endmodule


module STRING-KORE$SYNTAX [kore, org.kframework.attributes.Location(Location(672,1,678,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports STRING-COMMON$SYNTAX
  imports K-EQUAL$SYNTAX
endmodule


module STRING-SYNTAX [org.kframework.attributes.Location(Location(574,1,585,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports STRING-SYNTAX$SYNTAX
endmodule


module STRING-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(574,1,585,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  syntax String [hook(STRING.String), org.kframework.attributes.Location(Location(583,3,583,37)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  syntax String ::= r"[\\\"](([^\\\"\\n\\r\\\\])|([\\\\][nrtf\\\"\\\\])|([\\\\][x][0-9a-fA-F]{2})|([\\\\][u][0-9a-fA-F]{4})|([\\\\][U][0-9a-fA-F]{8}))*[\\\"]" [token]
endmodule


module SUBSTITUTION [org.kframework.attributes.Location(Location(38,1,44,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/substitution.k))]
  imports SUBSTITUTION$SYNTAX
  imports MAP
  imports KVAR
endmodule


module SUBSTITUTION$SYNTAX [org.kframework.attributes.Location(Location(38,1,44,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/substitution.k))]
  imports MAP$SYNTAX
  imports KVAR$SYNTAX
  syntax {Sort} Sort ::= Sort "[" Map "]" [function, hook(SUBSTITUTION.substMany), impure]
  syntax {Sort} Sort ::= Sort "[" KItem "/" KItem "]" [function, hook(SUBSTITUTION.substOne), impure]
endmodule


module UNSIGNED-INT-SYNTAX [org.kframework.attributes.Location(Location(358,1,361,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  imports UNSIGNED-INT-SYNTAX$SYNTAX
endmodule


module UNSIGNED-INT-SYNTAX$SYNTAX [org.kframework.attributes.Location(Location(358,1,361,9)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  syntax Int [hook(INT.Int), org.kframework.attributes.Location(Location(359,3,359,28)), org.kframework.attributes.Source(Source(/home/roei/k-framework/k-distribution/target/release/k/include/builtin/domains.k))]
  syntax Int ::= r"[0-9]+" [prec(2), prefer, token]
endmodule